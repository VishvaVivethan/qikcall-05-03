{"version":3,"file":"static/js/902.d8dfe497.chunk.js","mappings":"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","sources":["views/base/category/Category.js"],"sourcesContent":["import React, { useEffect, useState,useRef  } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCarousel,\r\n  CCarouselCaption,\r\n  CCarouselItem,\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\n// import { DocsExample } from 'src/components'\r\n\r\n// import AngularImg from 'src/assets/images/angular.jpg'\r\n// import ReactImg from 'src/assets/images/react.jpg'\r\n// import VueImg from 'src/assets/images/vue.jpg'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport {Typography,Button,Grid,TextField,Tooltip,Card,CardMedia,CardContent} from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\nimport { Container } from 'postcss'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\n\r\nconst slidesLight = [\r\n  'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1607923e7e2%20text%20%7B%20fill%3A%23AAA%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1607923e7e2%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23F5F5F5%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.9296875%22%20y%3D%22217.75625%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n  'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23BBB%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23EEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n  'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23E5E5E5%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n]\r\n\r\nconst Carousels = () => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [images, setImages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [Delete, setDelete] = useState([]);\r\n  const [deleteopen,DeleteOpen] = useState('')\r\n  const [categories, setCategories] = useState([]);\r\n  const [msg, setMsg] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [msgOpen, setMsgOpen] = useState(false);\r\n  const [color, setColor] = useState(''); // Success or error\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleImageChange = (index, event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (file.type.startsWith('image/')) {\r\n        // Create a preview URL and update the images array\r\n        const newImages = [...images];\r\n        newImages[index] = URL.createObjectURL(file); \r\n        setImages(newImages);\r\n\r\n        // Store the actual file object for uploading later\r\n        const newFiles = [...files];\r\n        newFiles[index] = file;\r\n        setFiles(newFiles);\r\n      } else {\r\n        alert('Please select a valid image file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map(async (file) => {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('upload_preset', 'ae1kvvqp'); // Your Cloudinary preset\r\n\r\n          const response = await fetch(\r\n            'https://api.cloudinary.com/v1_1/qikcall/image/upload',\r\n            {\r\n              method: 'POST',\r\n              body: formData,\r\n            }\r\n          );\r\n\r\n          const data = await response.json();\r\n\r\n          if (data.secure_url) {\r\n            console.log(data.secure_url, 'Image uploaded successfully');\r\n            return data.secure_url; // Return the secure URL from Cloudinary\r\n          } else {\r\n            setMsgOpen(true);\r\n            setColor('error');\r\n            setMsg('Failed to upload image');\r\n            throw new Error('Failed to upload image.');\r\n          }\r\n        })\r\n      );\r\n\r\n      // All images uploaded successfully\r\n      setMsgOpen(true);\r\n      setColor('success');\r\n      setMsg('Images uploaded successfully');\r\n      return uploadedImageUrls;\r\n    } catch (error) {\r\n      setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg('Error uploading images');\r\n      throw error;\r\n    }\r\n  };\r\n\r\nconst categoryRegister= async()=>{\r\n  try{\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const uploadimage = await uploadImage();\r\n    \r\n    const raw = JSON.stringify({\r\n      \"categoryname\": category,\r\n      \"addimages\": uploadimage\r\n    });\r\n    \r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n    \r\n    fetch(\"/api/category\", requestOptions)\r\n    .then(async (response) => {\r\n      if (response.status === 200 || response.status === 400) {\r\n        return { status_code: response.status, data: await response.json() };\r\n      } else {\r\n        return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n      }\r\n    })\r\n    .then((result) => {\r\n      setData(result)\r\n      window.location.reload()\r\n      console.log(result,\"category\")\r\n     })\r\n    .catch(error => console.log('error', error));\r\n\r\n  }catch(error){\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nuseEffect(() => {\r\n  getCategory()\r\n}, []); \r\n\r\nconst getCategory =()=>{\r\n  try{\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\"\r\n    };\r\n    \r\n    fetch(\"/api/categorylist\", requestOptions)\r\n    .then(async (response) => {\r\n      if (response.status === 200 || response.status === 400) {\r\n        return { status_code: response.status, data: await response.json() };\r\n      } else {\r\n        return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n      }\r\n    })\r\n    .then((result) => {\r\n      setCategories(result.data.data)\r\n      console.log(result.data.data,\"category data\")\r\n     })\r\n    .catch(error => console.log('error', error));\r\n\r\n  }catch(error){\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst deleteCategory = (categoryid)=>{\r\n  try{\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      redirect: \"follow\"\r\n    };\r\n    \r\n    fetch(`/api/category_delete?id=${categoryid}`, requestOptions)\r\n    .then(async (response) => {\r\n      if (response.status === 200 || response.status === 400) {\r\n        return { status_code: response.status, data: await response.json() };\r\n      } else {\r\n        return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n      }\r\n    })\r\n    .then((result) => {\r\n      setDelete(result)\r\n      window.location.reload()\r\n      console.log(result,\"Delete data\")\r\n     })\r\n    .catch(error => console.log('error', error));\r\n\r\n  }catch(error){\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n\r\n\r\nconst handleDeleteOpen = (categoryid) => {\r\n  deleteCategory(categoryid)\r\n  console.log(categoryid,\"grow up\")\r\n};\r\n\r\nconst handleDeleteClose = () => {\r\n  DeleteOpen(false);\r\n};\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleUploadClick = () => {\r\n    fileInputRef.current.click(); // Programmatically trigger the file input click\r\n  };\r\n\r\n\r\n  return (\r\n   <>\r\n    <Box sx={{ flexGrow: 1 }}>\r\n    <AppBar position=\"static\">\r\n      <Toolbar variant=\"dense\">\r\n        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={6} container direction=\"row\" alignItems=\"center\">\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 0.5 }}>\r\n              <CategoryIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n              Category List\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n            <Button onClick={handleClickOpen} color=\"inherit\"> <AddCircleIcon sx={{ mr: 0.5 }}/> Add Category</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n       \r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Create New Category\"}\r\n        </DialogTitle>\r\n        <DialogContent sx={{width:\"600px\"}}>\r\n        <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={2}>\r\n      <Grid mt={2} item xs={12} sm={6} container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n        <TextField\r\n          label=\"Category Name\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setCategory(e.target.value);\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} container direction=\"column\" justifyContent=\"space-between\" alignItems=\"flex-start\">\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef} // Attach ref to the input\r\n          onChange={(event) => handleImageChange(0, event)}\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }} // Hide the file input\r\n        />\r\n        <Button variant='contained' sx={{backgroundColor:\"#1c305c\"}} onClick={handleUploadClick}><FileUploadIcon/>Upload</Button>\r\n\r\n        {msgOpen && <div style={{ color: color === 'error' ? 'red' : 'green',marginTop:\"10px\" }}>{msg}</div>}\r\n\r\n        {/* Image Preview */}\r\n        {images[0] && <img src={images[0]} alt=\"Preview\" style={{ width: '200px', height: '200px',marginTop:\"10px\" }} />}\r\n      </Grid>\r\n    </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button  onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button onClick={categoryRegister} >\r\n            Save\r\n          </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n\r\n  <Grid mt={5} mb={5} container spacing={2}>\r\n  {Array.isArray(categories) && categories.length > 0 ? (\r\n    categories.map((item, index) => (\r\n      <Grid item xs={12} sm={6} md={3} key={index}> {/* Changed to md={3} to fit 4 cards per row */}\r\n        <Card sx={{ display: 'flex', padding: 1, }}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            sx={{ width: 50, height: 50 }}\r\n            image={item.addimages} // Your image source here from item\r\n            alt={item.categoryname} // Your alt text\r\n          />\r\n          <Grid container direction=\"row\" justifyContent=\"space-around\" alignItems=\"center\">\r\n            <Typography sx={{ marginLeft: \"10px\",fontSize:\"15px\" }} >{item.categoryname}</Typography>\r\n            <IconButton onClick={() => { handleDeleteOpen(item._id) }}>\r\n              <DeleteIcon sx={{fontSize:\"15px\"}} color='error' />\r\n            </IconButton>\r\n          </Grid>\r\n        </Card>\r\n      </Grid>\r\n    ))\r\n  ) : (\r\n    <Typography variant=\"body2\" color=\"text.secondary\">\r\n      No categories available\r\n    </Typography>\r\n  )}\r\n</Grid>\r\n\r\n\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Carousels\r\n"],"names":["Carousels","open","setOpen","React","images","setImages","useState","files","setFiles","data","setData","Delete","setDelete","deleteopen","DeleteOpen","categories","setCategories","msg","setMsg","category","setCategory","msgOpen","setMsgOpen","color","setColor","fileInputRef","useRef","useEffect","getCategory","fetch","method","redirect","then","async","response","status","status_code","json","result","console","log","catch","error","handleDeleteOpen","categoryid","requestOptions","concat","window","location","reload","deleteCategory","handleClose","_jsxs","_Fragment","children","_jsx","Box","sx","flexGrow","AppBar","position","Toolbar","variant","Grid","container","direction","justifyContent","alignItems","item","xs","IconButton","edge","mr","CategoryIcon","Typography","component","Button","onClick","handleClickOpen","AddCircleIcon","Dialog","onClose","DialogTitle","id","DialogContent","width","spacing","mt","sm","TextField","label","fullWidth","onChange","e","target","value","type","ref","event","handleImageChange","index","file","startsWith","newImages","URL","createObjectURL","newFiles","alert","accept","style","display","backgroundColor","handleUploadClick","current","click","FileUploadIcon","marginTop","src","alt","height","DialogActions","myHeaders","Headers","append","uploadimage","uploadedImageUrls","Promise","all","map","formData","FormData","body","secure_url","Error","uploadImage","raw","JSON","stringify","headers","mb","Array","isArray","length","md","Card","padding","CardMedia","image","addimages","categoryname","marginLeft","fontSize","_id","DeleteIcon"],"sourceRoot":""}