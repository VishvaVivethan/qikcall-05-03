{"version":3,"file":"static/js/238.8d2e25bd.chunk.js","mappings":"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","sources":["views/base/customer/Customer.js","../node_modules/@mui/icons-material/AddCircle.js","../node_modules/@mui/icons-material/Category.js","../node_modules/@mui/icons-material/Info.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport {Table,Typography,Grid,Card,CardMedia,Alert,Snackbar,TextField,Container,TablePagination }from '@mui/material';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport { AppHeader } from '../../../components' \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Accordion = () => {\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [name, setName] = useState('');\r\n  const[password,setPasssword]=useState('')\r\n  const [email, setEmail] = useState('');\r\n  const [phonenumber, setPhonenumber] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [pincode, setPincode] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [cname, setCName] = useState('');\r\n  const[cpassword,setCPasssword]=useState('')\r\n  const [cemail, setCEmail] = useState('');\r\n  const [cphonenumber, setCPhonenumber] = useState('');\r\n  const [caddressLine1, setCAddressLine1] = useState('');\r\n  const [caddressLine2, setCAddressLine2] = useState('');\r\n  const [ccity, setCCity] = useState('');\r\n  const [cpincode, setCPincode] = useState('');\r\n  const [cstate, setCState] = useState('');\r\n  const [msgOpen, setMsgOpen] = useState(false);\r\n  const [color, setColor] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const menuOpen = Boolean(anchorEl);\r\n  const [deletedata, setDelete] = useState('');\r\n  const [deleteopen, setDeleteOPen] = useState(false);\r\n  const [messageopen, setMessageOPen] = useState(false);\r\n  const [menuOpenUserId, setMenuOpenUserId] = useState(null);\r\n  const [tittle, setTittle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const[userid,setUserid] = useState('');\r\n  const[fcmtoken,setFcmtoken] = useState('')\r\n\r\n\r\n  const navigate = useNavigate('')\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    \r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      // If token is expired, remove the token and navigate to homepage\r\n      if (decodedToken.exp < currentTime) {\r\n        Cookies.remove('token');\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      Cookies.remove('token');\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []);\r\n\r\n  const handleRegister = () => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        const raw = JSON.stringify({\r\n            \"username\": cname,\r\n            \"email\": cemail,\r\n            \"password\": cpassword,\r\n            \"phonenumber\": cphonenumber,\r\n            \"addressline1\": caddressLine1,\r\n\"addressline2\": caddressLine2,\r\n\"city\": ccity,\r\n\"pincode\": cpincode,\r\n\"state\": cstate,\r\n            \"role\":\"customer\"\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(\"/api/register\", requestOptions)\r\n            .then(async (response) => {\r\n                if (response.status === 200 || response.status === 400) {\r\n                    return { status_code: response.status, data: await response.json() };\r\n                } else {\r\n                    return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n                }\r\n            })\r\n            .then((result) => {\r\n                if (result.status_code === 200) {\r\n                    console.log(result.data.token, \"Token stored\");\r\n\r\n                    // const token = result.data.token;\r\n                    // Cookies.set('token', token, { expires: 7, secure: true });\r\n\r\n                    setOpen(true);\r\n                    setColor('success');\r\n                    setMsg(result.data.msg || \"Register Success\");\r\n                   \r\n                    // setTimeout(() => {\r\n                    //   navigate('/');\r\n                    // }, \"1000\");\r\n\r\n                } else if (result.status_code === 400) {\r\n                    setOpen(true);\r\n                    setColor('error');\r\n                    setMsg(result.data.msg);\r\n\r\n                } else if (result.status_code === 401) {\r\n                    // Handle unauthorized access\r\n                    setOpen(true);\r\n                    setColor('error');\r\n                    setMsg(\"Unauthorized access\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg(error.response?.data?.message || 'An Error Occurred');\r\n            });\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        setOpen(true);\r\n        setColor('error');\r\n        setMsg(error.message || 'An Error Occurred');\r\n    }\r\n};\r\n\r\n  const getUserData = async () => {\r\n    try {\r\n      const response = await fetch('/api/userdetails');\r\n      const result = await response.json();\r\n      if (response.status === 200 || response.status === 400) {\r\n        setData(result.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  const getDataById = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/useradmin?id=${userId}`);\r\n      const result = await response.json();\r\n      if (response.status === 200 || response.status === 400) {\r\n        setUser(result.data);\r\n        setName(result.data.username || '');\r\n        setEmail(result.data.email || '');\r\n        setPhonenumber(result.data.phonenumber || '');\r\n        setAddressLine1(result.data.addressline1 || '');\r\n        setAddressLine2(result.data.addressline2 || '');\r\n        setCity(result.data.city || '');\r\n        setPincode(result.data.pincode || '');\r\n        setState(result.data.state || '');\r\n        setUserid(result.data._id)\r\n        setFcmtoken(result.data.fcmToken)\r\n        console.log(result.data,\"databyid\")\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user by ID:', error);\r\n    }\r\n  };\r\n\r\n  const EditUser = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/user_update?id=${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: name || user.username,\r\n          email: email || user.email,\r\n          phonenumber: phonenumber || user.phonenumber,\r\n          city: city || user.city,\r\n          state: state || user.state,\r\n          pincode: pincode || user.pincode,\r\n          addressline1: addressLine1 || user.addressline1,\r\n          addressline2: addressLine2 || user.addressline2,\r\n        }),\r\n      });\r\n  \r\n      const result = await response.json();\r\n      if (response.status === 200) {\r\n        setMsg('User updated successfully');\r\n        setColor('success');\r\n        console.log(result.data,\"edit data\")\r\n      } else {\r\n        setMsg('Update failed');\r\n        setColor('error');\r\n      }\r\n      setMsgOpen(true);\r\n      getUserData(); // Refresh data after update\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      setMsg('Update failed');\r\n      setColor('error');\r\n      setMsgOpen(true);\r\n    }\r\n  };\r\n  \r\n  // User Delete Function\r\n  const userDelete = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/userdelete?id=${userId}`, {\r\n        method: \"DELETE\",\r\n        redirect: \"follow\",\r\n      });\r\n  \r\n      if (response.status === 200 || response.status === 400) {\r\n        const result = await response.json();\r\n        setDelete(result, \"deleted data\");\r\n        getUserData(); // Refresh user data after deletion\r\n      } else {\r\n        console.error('Unexpected Error:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n    }\r\n  };\r\n\r\n  const  SendMessage =()=>{\r\n    try{\r\n      const myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nconst raw = JSON.stringify({\r\n  \"token\":fcmtoken,\r\n  \"title\": tittle,\r\n  \"body\": description,\r\n  \"userId\": userid\r\n});\r\n\r\nconst requestOptions = {\r\n  method: \"POST\",\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: \"follow\"\r\n};\r\n\r\nfetch(\"/api/notifications/send\", requestOptions)\r\n.then(async (response) => {\r\n  if (response.status === 200 || response.status === 400) {\r\n      return { status_code: response.status, data: await response.json() };\r\n  } else {\r\n      return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n  }\r\n})\r\n.then((result) => {\r\n  if (result.status_code === 200) {\r\n      console.log(result.data, \"Token stored\")\r\n\r\n      setMsgOpen(true);\r\n      setColor('success');\r\n      \r\n      setMsg(\"Message Sended\");\r\n      \r\n  } else if (result.status_code === 400) {\r\n    setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(\"Permisson not granted\");\r\n  } \r\n})\r\n.catch((error) => {\r\n  console.error(error);\r\n  setMsgOpen(true);\r\n  setColor('error');\r\n  setMsg(error.response?.data?.message );\r\n});\r\n\r\n    }catch(error){\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const handleClickOpen = (userId) => {\r\n    setOpen(true);\r\n    getDataById(userId);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n const handleEditOpen = (userId) => {\r\n  setEdit(true);\r\n  getDataById(userId); \r\n  console.log(userId,\"id\")\r\n};\r\n\r\n\r\n  const handleEditClose = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleDeleteOpen = (userId) => {\r\n    setDeleteOPen(true); // Ensure this state controls the delete modal/dialog\r\n    getDataById(userId); // Get user data if needed for confirmation\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setDeleteOPen(false);\r\n  };\r\n\r\n  const handleMessageOpen = (userId) => {\r\n    setMessageOPen(true); // Ensure this state controls the delete modal/dialog\r\n    getDataById(userId); // Get user data if needed for confirmation\r\n  };\r\n\r\n  const handleMessageClose = () => {\r\n    setMessageOPen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    userDelete(user._id);\r\n    setDeleteOPen(false);\r\n    handleMenuClose()\r\n  };\r\n\r\n  const handleMessage = () => {\r\n    SendMessage()\r\n    handleMessageClose()\r\n    handleMenuClose()\r\n  };\r\n\r\n  const [create,setCreate] = useState('')\r\n\r\n  const handleCreateOPen = () => {\r\n    setCreate(true);\r\n  };\r\n\r\n  const handleCreateClose = () => {\r\n    setCreate(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    EditUser(user._id);\r\n    setEdit(false);\r\n    handleMenuClose()\r\n  };\r\n\r\n  const handleSnackClose = () => {\r\n    setMsgOpen(false);\r\n  };\r\n\r\n  const handleMenuOpen = (event,userId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setMenuOpenUserId(userId)\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setMenuOpenUserId(null)\r\n  };\r\n\r\n  const [pincodedata, setPincodedata] = useState([]);\r\n  // const [text, setText] = useState('');\r\n\r\n  console.log(pincodedata,pincode, \"Pincode\")\r\n\r\n  const pincodeDetails = () => {\r\n    if (!cpincode) return; // Ensure pincode is not empty\r\n\r\n    fetch(`https://api.postalpincode.in/pincode/${cpincode}`)\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        if (response.status === 200 && data[0].Status === 'Success') {\r\n          setPincodedata(data[0].PostOffice || []);\r\n        } else {\r\n          setPincodedata([]);\r\n        }\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cpincode.length === 6) {\r\n      pincodeDetails();\r\n    }\r\n  }, [cpincode]);\r\n\r\n  useEffect(() => {\r\n    if (pincodedata.length > 0) {\r\n      // Assuming the first result is what we need\r\n      const postOffice = pincodedata[0];\r\n      setCCity(postOffice.District || '');\r\n      setCState(postOffice.State || '');\r\n    }\r\n  }, [pincodedata]);\r\n\r\n\r\n  const validateEmail = (email) => {\r\n    // Regular expression for basic email validation\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,16}$/;\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateStep = () => {\r\n    let newErrors = {};\r\n  \r\n   \r\n   \r\n      if (!cname) newErrors.cname = \"Name is required\";\r\n      if (!cemail) {\r\n        newErrors.cemail = \"Email is required\";\r\n      } else if (!validateEmail(cemail)) {\r\n        newErrors.cemail = \"Invalid email address\";\r\n      }\r\n      if (!cpassword) {\r\n        newErrors.cpassword = \"Password is required\";\r\n      } else {\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,16}$/;\r\n        if (!passwordRegex.test(cpassword)) {\r\n          newErrors.cpassword = \"Password must be 8-16 characters, contain uppercase, lowercase, number, and special character.\";\r\n        }\r\n      }\r\n      if (!cphonenumber) {\r\n        newErrors.cphonenumber = \"Phonenumber is required\";\r\n      } else if(!cphonenumber.length===10) {\r\n          newErrors.cphonenumber = \"Phone number must be 10 Digits\";\r\n      }\r\n      \r\n     \r\n      if (!caddressLine1) newErrors.caddressLine1 = \"Door No is required\";\r\n      if (!caddressLine2) newErrors.caddressLine2 = \"Street/Area  is required\";\r\n      \r\n      if (!ccity) newErrors.ccity = \"City is required\";\r\n      if (!cstate) newErrors.cstate = \"State is required\";\r\n      if (!cpincode) newErrors.cpincode = \"Pincode is required\";\r\n   \r\n  \r\n   \r\n  \r\n    return newErrors;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const validationErrors = validateStep();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors); \r\n    } else {\r\n      setErrors({});\r\n      handleRegister();\r\n    }\r\n  };\r\n  \r\n\r\n  // const handleDelete = async (userId) => {\r\n  //   try {\r\n  //     await fetch(`/api/user_delete?id=${userId}`, { method: 'DELETE' });\r\n  //     getUserData(); \r\n  //   } catch (error) {\r\n  //     console.error('Error deleting user:', error);\r\n  //   }\r\n  // };\r\n\r\n  // const [page, setPage] = React.useState(0);\r\n  // const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  //   setRowsPerPage(parseInt(event.target.value, 10));\r\n  //   setPage(0);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n     <Box mb={5} sx={{ flexGrow: 1 }}>\r\n    <AppBar style={{backgroundColor:\"#2d2859\",color:\"#fff\"}}  position=\"static\">\r\n      <Toolbar  variant=\"dense\">\r\n        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={6} container direction=\"row\" alignItems=\"center\">\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 0.5 }}>\r\n              <CategoryIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n              Customer List\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n            <Button onClick={handleCreateOPen} color=\"inherit\"> <AddCircleIcon sx={{ mr: 0.5 }}/> Add Customer</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n          open={create}\r\n          onClose={handleCreateClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Create User\"}\r\n          </DialogTitle>\r\n          <DialogContent sx={{ width: \"500px\" }}>\r\n            <Grid mt={2} container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cname}\r\n                  onChange={(e) => setCName(e.target.value)}\r\n                  error={!!errors.cname}\r\n                  helperText={errors.cname}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cpassword}\r\n                  onChange={(e) => setCPasssword(e.target.value)}\r\n                  error={!!errors.cpassword}\r\n                  helperText={errors.cpassword}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cemail}\r\n                  onChange={(e) => setCEmail(e.target.value)}\r\n                  error={!!errors.cemail}\r\n                  helperText={errors.cemail}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Phone Number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cphonenumber}\r\n                  onChange={(e) => setCPhonenumber(e.target.value)}\r\n                  error={!!errors.cphonenumber}\r\n                  helperText={errors.cphonenumber}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Address Line 1\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={caddressLine1}\r\n                  onChange={(e) => setCAddressLine1(e.target.value)}\r\n                  error={!!errors.caddressLine1}\r\n                  helperText={errors.caddressLine1}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Address Line 2\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={caddressLine2}\r\n                  onChange={(e) => setCAddressLine2(e.target.value)}\r\n                  error={!!errors.caddressLine2}\r\n                  helperText={errors.caddressLine2}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Pincode\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cpincode}\r\n                  onChange={(e) => setCPincode(e.target.value)}\r\n                  error={!!errors.cpincode}\r\n                  helperText={errors.cpincode}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"City\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={ccity}\r\n                  onChange={(e) => setCCity(e.target.value)}\r\n                  error={!!errors.ccity}\r\n                  helperText={errors.ccity}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"State\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cstate}\r\n                  onChange={(e) => setCState(e.target.value)}\r\n                  error={!!errors.cstate}\r\n                  helperText={errors.cstate}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCreateClose}>Cancel</Button>\r\n            <Button onClick={handleSave}>Save</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>User Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Phone Number</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Mail</StyledTableCell>\r\n              <StyledTableCell align=\"center\">City</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Details</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Edit</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 ? (\r\n              data.map((item, index) => (\r\n                item.role === \"customer\" && (\r\n                  <StyledTableRow key={index}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.username}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">{item.phonenumber}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">{item.email}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">{item.city}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      <InfoIcon onClick={() => handleClickOpen(item._id)} />\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                    <IconButton onClick={(e) => handleMenuOpen(e, item._id)}>\r\n  <EditIcon />\r\n</IconButton>\r\n<Menu\r\n  anchorEl={anchorEl}\r\n  open={Boolean(anchorEl) && menuOpenUserId === item._id}\r\n  onClose={handleMenuClose}\r\n  MenuListProps={{\r\n    'aria-labelledby': 'basic-button',\r\n  }}\r\n>\r\n  <MenuItem onClick={() => handleEditOpen(item._id)}>Edit</MenuItem>\r\n  <MenuItem onClick={() => handleDeleteOpen(item._id)}>Delete</MenuItem>\r\n  <MenuItem onClick={() => handleMessageOpen(item._id)}>Message</MenuItem>\r\n</Menu>\r\n\r\n        </StyledTableCell>\r\n                  </StyledTableRow>\r\n                )\r\n              ))\r\n            ) : (\r\n              <Typography variant=\"h6\" align=\"center\">\r\n                No results found for customers.\r\n              </Typography>\r\n            )}\r\n          </TableBody>\r\n          {/* <TablePagination\r\n      component=\"div\"\r\n      count={100}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n    /> */}\r\n\r\n        </Table>\r\n\r\n        {/* Details Dialog */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"User Details\"}\r\n          </DialogTitle>\r\n          <DialogContent sx={{ width: \"500px\" }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography sx={{ fontSize: \"15px\" }}>Name:</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>Phone:</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>Email:</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>Address:</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>City:</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>Pincode:</Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography sx={{ fontSize: \"15px\" }}>{user.username}</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>{user.phonenumber}</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>{user.email}</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>{user.addressline1}, {user.addressline2}</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>{user.city}, {user.state}, {user.pincode}</Typography>\r\n                <Typography sx={{ fontSize: \"15px\" }}>{user.pincode}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Edit Dialog */}\r\n        <Dialog\r\n          open={edit}\r\n          onClose={handleEditClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Edit User\"}\r\n          </DialogTitle>\r\n          <DialogContent sx={{ width: \"500px\" }}>\r\n            <Grid mt={2} container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Phone Number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={phonenumber}\r\n                  onChange={(e) => setPhonenumber(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Address Line 1\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={addressLine1}\r\n                  onChange={(e) => setAddressLine1(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Address Line 2\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={addressLine2}\r\n                  onChange={(e) => setAddressLine2(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"City\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={city}\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"State\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={state}\r\n                  onChange={(e) => setState(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Pincode\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={pincode}\r\n                  onChange={(e) => setPincode(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleEditClose}>Cancel</Button>\r\n            <Button onClick={handleSubmit}>Save</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog\r\n        open={deleteopen}\r\n        onClose={handleDeleteClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Delete Freelancer\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n           Are you sure, You want to delete this User\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button variant='contained' sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}  onClick={handleDeleteClose}>\r\n           No\r\n          </Button>\r\n          <Button variant='contained' sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleDelete} s>\r\n            Yes\r\n          </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={messageopen}\r\n        onClose={handleMessageClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogContent sx={{width:\"400px\"}}>\r\n          \r\n            <Typography className='mb-4' sx={{fontSize:\"16px\",width:\"100%\"}}>Send Message</Typography>\r\n           <Grid xs={12} container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\r\n            <TextField\r\n            label='Tittle'\r\n            className='mb-4'\r\n            onChange={(e)=>setTittle(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n            label='Message'\r\n            className='mb-2'\r\n            onChange={(e)=>setDescription(e.target.value)}\r\n            />\r\n           </Grid>\r\n           <Grid mt={5} container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button variant='contained' sx={{ fontSize:\"10px\", backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}  onClick={handleMessageClose}>\r\n           Cancel\r\n          </Button>\r\n          <Button variant='contained' sx={{ fontSize:\"10px\", backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleMessage} s>\r\n            Send\r\n          </Button>\r\n          </Grid>\r\n          \r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n        \r\n        <Snackbar open={msgOpen} autoHideDuration={6000} onClose={handleSnackClose}>\r\n          <Alert onClose={handleSnackClose} severity={color}>\r\n            {msg}\r\n          </Alert>\r\n        </Snackbar>\r\n      </TableContainer>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11h-4v4h-2v-4H7v-2h4V7h2v4h4z\"\n}), 'AddCircle');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;"],"names":["StyledTableCell","styled","TableCell","_ref","theme","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","border","Accordion","data","setData","useState","open","setOpen","edit","setEdit","user","setUser","name","setName","password","setPasssword","email","setEmail","phonenumber","setPhonenumber","addressLine1","setAddressLine1","addressLine2","setAddressLine2","city","setCity","pincode","setPincode","state","setState","cname","setCName","cpassword","setCPasssword","cemail","setCEmail","cphonenumber","setCPhonenumber","caddressLine1","setCAddressLine1","caddressLine2","setCAddressLine2","ccity","setCCity","cpincode","setCPincode","cstate","setCState","msgOpen","setMsgOpen","setColor","msg","setMsg","anchorEl","setAnchorEl","deletedata","setDelete","Boolean","deleteopen","setDeleteOPen","messageopen","setMessageOPen","menuOpenUserId","setMenuOpenUserId","tittle","setTittle","description","setDescription","userid","setUserid","fcmtoken","setFcmtoken","navigate","useNavigate","useEffect","token","Cookies","get","decodedToken","jwtDecode","currentTime","Date","now","exp","remove","error","console","getUserData","async","response","fetch","result","json","status","getDataById","userId","username","addressline1","addressline2","_id","fcmToken","log","handleClose","handleEditClose","handleDeleteClose","handleMessageClose","create","setCreate","handleCreateClose","handleSnackClose","handleMenuClose","pincodedata","setPincodedata","length","then","Status","PostOffice","catch","postOffice","District","State","errors","setErrors","_jsxs","_Fragment","children","_jsx","Box","mb","sx","flexGrow","AppBar","style","position","Toolbar","variant","Grid","container","direction","justifyContent","alignItems","item","xs","IconButton","edge","mr","CategoryIcon","Typography","component","Button","onClick","handleCreateOPen","AddCircleIcon","Dialog","onClose","DialogTitle","id","DialogContent","width","mt","spacing","TextField","label","fullWidth","value","onChange","e","target","helperText","DialogActions","handleSave","validationErrors","validateStep","newErrors","test","validateEmail","Object","keys","handleRegister","myHeaders","Headers","append","raw","JSON","stringify","method","headers","redirect","status_code","_error$response","_error$response$data","message","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","map","index","role","scope","InfoIcon","handleClickOpen","handleMenuOpen","event","currentTarget","EditIcon","Menu","MenuListProps","MenuItem","handleEditOpen","handleDeleteOpen","handleMessageOpen","handleSubmit","EditUser","DialogContentText","handleDelete","userDelete","s","className","handleMessage","SendMessage","_error$response2","_error$response2$data","Snackbar","autoHideDuration","Alert","severity","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","cx","cy","r","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","overridesResolver","props","styles","root","overflowX","React","inProps","ref","useDefaultProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}