{"version":3,"file":"static/js/136.5195153a.chunk.js","mappings":"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","sources":["views/base/freelancer/Freelancer.js","../node_modules/@mui/icons-material/AddCircle.js","../node_modules/@mui/icons-material/Category.js","../node_modules/@mui/icons-material/Info.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport {Table,Typography,Grid,Card,CardMedia,Alert,Snackbar,TextField }from '@mui/material';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport Switch from '@mui/material/Switch';\r\nimport { FormControl, InputLabel, Select, OutlinedInput, Chip } from '@mui/material';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\n\r\nconst Freelancer = () => {\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const[detailsopen,setDetailsOpen] = useState(false)\r\n  const [edit, setEdit] = useState(false);\r\n  const [deletedata, setDelete] = useState('');\r\n  const [deleteopen, setDeleteOPen] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phonenumber, setPhonenumber] = useState('');\r\n  const [aadharnumber, setAadharnumber] = useState('');\r\n  const [pannumber, setPannumber] = useState('');\r\n  const [membership, setMembership] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [pincode, setPincode] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [cname, setCName] = useState('');\r\n  const [cemail, setCEmail] = useState('');\r\n  const [cpassword, setCPassword] = useState('');\r\n  const [calterphonenumber,setCAlternumber]=useState('')\r\n  const [cphonenumber, setCPhonenumber] = useState('');\r\n  const [caadharnumber, setCAadharnumber] = useState('');\r\n  const [cpannumber, setCPannumber] = useState('');\r\n  const [cmembership, setCMembership] = useState('');\r\n  const [caddressLine1, setCAddressLine1] = useState('');\r\n  const [caddressLine2, setCAddressLine2] = useState('');\r\n  const [ccity, setCCity] = useState('');\r\n  const [cpincode, setCPincode] = useState('');\r\n  const [cstate, setCState] = useState('');\r\n  const [editData, setEditData] = useState([]);\r\n  const [msgOpen, setMsgOpen] = useState(false);\r\n  const [color, setColor] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const [type,setType] = useState('')\r\n  const [etype,setEType] = useState('')\r\n  const [plan,getPlan]= useState('')\r\n  const theme = useTheme();\r\n  const [tittle, setTittle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const[userid,setUserid] = useState('');\r\n  const[fcmtoken,setFcmtoken] = useState('')\r\n  const [messageopen, setMessageOPen] = useState(false);\r\n\r\n  const navigate = useNavigate('')\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    \r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      // If token is expired, remove the token and navigate to homepage\r\n      if (decodedToken.exp < currentTime) {\r\n        Cookies.remove('token');\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      Cookies.remove('token');\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n\r\n  // Fetch user data\r\n  useEffect(() => {\r\n    getUserData();\r\n    getMembership();\r\n  }, []);\r\n\r\n  console.log(user,\"user data\")\r\n\r\n  const getUserData = () => {\r\n    fetch('/api/userdetails', { method: 'GET', redirect: 'follow' })\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n          return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n          return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n      })\r\n      .then((result) => {\r\n        setData(result.data.data);\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  // Fetch user data by ID\r\n  const getDataById = (userId) => {\r\n    fetch(`/api/useradmin?id=${userId}`, { method: 'GET', redirect: 'follow' })\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n          return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n          return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n      })\r\n      .then((result) => {\r\n        setUser(result.data.data);\r\n        setName(result.data.data.username || '');\r\n        setEmail(result.data.data.email || '');\r\n        setPhonenumber(result.data.data.phonenumber || '');\r\n        setAadharnumber(result.data.data.aadharnumber || '');\r\n        setPannumber(result.data.data.pannumber || '');\r\n        setMembership(result.data.data.membership || '');\r\n        setAddressLine1(result.data.data.addressline1 || '');\r\n        setAddressLine2(result.data.data.addressline2 || '');\r\n        setCity(result.data.data.city || '');\r\n        setPincode(result.data.data.pincode || '');\r\n        setState(result.data.data.state || '');\r\n        setChecked(result.data.data.isapprove);\r\n        setFcmtoken(result.data.fcmToken)\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n\r\n  // Edit user details\r\n  const EditUser = async (userId) => {\r\n    try{\r\n      const myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nconsole.log(checked,\"checked\")\r\n\r\nconst raw = JSON.stringify({\r\n   username: name ,\r\n      email: email ,\r\n      phonenumber: phonenumber,\r\n      city: city ,\r\n      state: state ,\r\n      pincode: pincode ,\r\n      addressline1: addressLine1 ,\r\n      addressline2: addressLine2 ,\r\n      aadharnumber: aadharnumber ,\r\n      pannumber: pannumber ,\r\n      membership: etype,\r\n      isapprove: checked  \r\n});\r\n\r\n\r\n\r\nconst requestOptions = {\r\n  method: \"PUT\",\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: \"follow\"\r\n};\r\n\r\nfetch(`/api/user_update?id=${userId ? userId : undefined}`, requestOptions)\r\n  .then(async (response) => {\r\n                    if (response.status === 200 || response.status === 400) {\r\n                        return { status_code: response.status, data: await response.json() };\r\n                    } else {\r\n                        return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n                    }\r\n                })\r\n                .then((result) => {\r\n                    if (result.status_code === 200) {\r\n                        setEditData([result.data]);\r\n                        getUserData(userId)\r\n                        setMsgOpen(true);\r\n                        setColor('success');\r\n                        setMsg(result.data.msg || \"Register Success\");\r\n    \r\n                    } else if (result.status_code === 400) {\r\n                        setMsgOpen(true);\r\n                        setColor('error');\r\n                        setMsg(result.data.msg);\r\n    \r\n                    } else if (result.status_code === 401) {\r\n                        // Handle unauthorized access\r\n                        setMsgOpen(true);\r\n                        setColor('error');\r\n                        setMsg(\"Unauthorized access\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg(error.response?.data?.message || 'An Error Occurred');\r\n                });\r\n    }catch(error) {\r\n      console.error(error);\r\n      setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(error.response?.data?.message || 'An Error Occurred');\r\n  };\r\n  };\r\n\r\n  const userDelete=(userId)=>{\r\n    try{\r\n      const requestOptions = {\r\n        method: \"DELETE\",\r\n        redirect: \"follow\"\r\n      };\r\n      \r\n      fetch(`/api/userdelete?id=${userId}`, requestOptions)\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n          return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n          return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n      })\r\n      .then((result) => {\r\n        setDelete(result,\"deleted data\");\r\n        getUserData()\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n    }catch(error){\r\n\r\n    }\r\n  }\r\n\r\n  const handlefreelancer = () => {\r\n    try{\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      \r\n      const raw = JSON.stringify({\r\n        \"username\": cname,\r\n        \"email\": cemail,\r\n        \"phonenumber\": cphonenumber,\r\n        \"password\": cpassword,\r\n        \"alterphonenumber\": calterphonenumber,\r\n        \"aadharnumber\": caadharnumber,\r\n        \"pannumber\": cpannumber,\r\n        \"membership\":type,\r\n        \"addressline1\": caddressLine1,\r\n  \"addressline2\": caddressLine2,\r\n  \"city\": ccity,\r\n  \"pincode\": cpincode,\r\n  \"state\": cstate,\r\n  \"isapprove\":approve,\r\n        \"role\":\"freelancer\"\r\n      });\r\n      \r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\"\r\n      };\r\n      \r\n      fetch(\"/api/register\", requestOptions)\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n            return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n            return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n    })\r\n    .then((result) => {\r\n        if (result.status_code === 200) {\r\n\r\n            getUserData()\r\n            setOpen(true);\r\n            setColor('success');\r\n            setMsg(result.data.msg || \"Register Success\");\r\n           \r\n            \r\n\r\n        } else if (result.status_code === 400) {\r\n            setOpen(true);\r\n            setColor('error');\r\n            setMsg(result.data.msg);\r\n\r\n        } else if (result.status_code === 401) {\r\n            setOpen(true);\r\n            setColor('error');\r\n            setMsg(\"Unauthorized access\");\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n        setOpen(true);\r\n        setColor('error');\r\n        setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    });\r\n    }catch(error){\r\n      console.error(error);\r\n      setOpen(true);\r\n      setColor('error');\r\n      setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    }\r\n   }\r\n\r\n   console.log(plan,\"plan data\")\r\n\r\n   const getMembership =()=>{\r\n    try{\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        redirect: \"follow\"\r\n      };\r\n      \r\n      fetch(\"/api/plandetail\", requestOptions)\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n            return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n            return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n    })\r\n    .then((result) => {\r\n      getPlan(result.data.data)\r\n            console.log(result.data.data,\"plan comming\")                  \r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n        setMsgOpen(true);\r\n        setColor('error');\r\n        setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    });\r\n    }catch(error){\r\n      console.error(error);\r\n      setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    }\r\n   }\r\n\r\n   const  SendMessage =()=>{\r\n    try{\r\n      const myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nconst raw = JSON.stringify({\r\n  \"token\":fcmtoken,\r\n  \"title\": tittle,\r\n  \"body\": description,\r\n  \"userId\": userid\r\n});\r\n\r\nconst requestOptions = {\r\n  method: \"POST\",\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: \"follow\"\r\n};\r\n\r\nfetch(\"/api/notifications/send\", requestOptions)\r\n.then(async (response) => {\r\n  if (response.status === 200 || response.status === 400) {\r\n      return { status_code: response.status, data: await response.json() };\r\n  } else {\r\n      return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n  }\r\n})\r\n.then((result) => {\r\n  if (result.status_code === 200) {\r\n      console.log(result.data, \"Token stored\")\r\n\r\n      setMsgOpen(true);\r\n      setColor('success');\r\n      \r\n      setMsg(\"Message Sended\");\r\n      \r\n  } else if (result.status_code === 400) {\r\n    setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(\"Permisson not granted\");\r\n  } \r\n})\r\n.catch((error) => {\r\n  console.error(error);\r\n  setMsgOpen(true);\r\n  setColor('error');\r\n  setMsg(error.response?.data?.message );\r\n});\r\n\r\n    }catch(error){\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n   \r\n   const [create,setCreate]=useState('')\r\n\r\n   const handleCreateOpen = () => {\r\n    setCreate(true);\r\n    \r\n  };\r\n\r\n  const handleCreateClose = () => {\r\n    setCreate(false);\r\n  };\r\n\r\n\r\n  // Open and close dialogs\r\n  const handleClickOpen = (userId) => {\r\n    setDetailsOpen(true);\r\n    getDataById(userId);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDetailsOpen(false);\r\n  };\r\n\r\n  const handleEditOpen = (userId) => {\r\n    setEdit(true);\r\n    getDataById(userId);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleDeleteOpen = (userId) => {\r\n    setDeleteOPen(true);\r\n    getDataById(userId);\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setDeleteOPen(false);\r\n  };\r\n\r\n  const handleMessageOpen = (userId) => {\r\n    setMessageOPen(true); // Ensure this state controls the delete modal/dialog\r\n    getDataById(userId); // Get user data if needed for confirmation\r\n  };\r\n\r\n  const handleMessageClose = () => {\r\n    setMessageOPen(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    EditUser(user._id);\r\n    setEdit(false);\r\n    getUserData();\r\n    handleMenuClose()\r\n    \r\n  };\r\n\r\n  const handleDelete = () => {\r\n    userDelete(user._id);\r\n    setDeleteOPen(false);\r\n    handleMenuClose()\r\n  };\r\n\r\n  const handleMessage = () => {\r\n    SendMessage()\r\n    handleMessageClose()\r\n    handleMenuClose()\r\n  };\r\n\r\n  \r\n\r\n  const handleSnackClose = () => {\r\n    setMsgOpen(false);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const menuOpen = Boolean(anchorEl);\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [checked, setChecked] = React.useState(false); // Boolean for Switch\r\n  const [approve, setApprove] = React.useState(false); // Boolean for Switch\r\n\r\n\r\n  // Handle checkbox change\r\n  const handleChange = (event) => {\r\n    console.log(event.target.checked,\"event.target.checked\")\r\n    setChecked(event.target.checked);  // Update the state when toggled\r\n  };\r\n\r\n  const handleApprove = (event) => {\r\n    console.log(event.target.checked,\"event.target.checked\")\r\n    setApprove(event.target.checked);  // Update the state when toggled\r\n  };\r\n\r\n  const handleMembership = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEType(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n    setType(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  const [pincodedata, setPincodedata] = useState([]);\r\n  // const [text, setText] = useState('');\r\n\r\n  console.log(pincodedata,pincode, \"Pincode\")\r\n\r\n  const pincodeDetails = () => {\r\n    if (!cpincode) return;\r\n    fetch(`https://api.postalpincode.in/pincode/${cpincode}`)\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        if (response.status === 200 && data[0].Status === 'Success') {\r\n          setPincodedata(data[0].PostOffice || []);\r\n        } else {\r\n          setPincodedata([]);\r\n        }\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cpincode.length === 6) {\r\n      pincodeDetails();\r\n    }\r\n  }, [cpincode]);\r\n\r\n  useEffect(() => {\r\n    if (pincodedata.length > 0) {\r\n      // Assuming the first result is what we need\r\n      const postOffice = pincodedata[0];\r\n      setCCity(postOffice.District || '');\r\n      setCState(postOffice.State || '');\r\n      setCity(postOffice.District || '');\r\n      setState(postOffice.State || '');\r\n    }\r\n  }, [pincodedata]);\r\n\r\n  const validateEmail = (email) => {\r\n    // Regular expression for basic email validation\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n\r\n   \r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const validateStep = () => {\r\n      let newErrors = {};\r\n    \r\n     \r\n     \r\n        if (!cname) newErrors.cname = \"Name is required\";\r\n        if (!cemail) {\r\n          newErrors.cemail = \"Email is required\";\r\n        } else if (!validateEmail(cemail)) {\r\n          newErrors.cemail = \"Invalid email address\";\r\n        }\r\n        if (!cpassword) {\r\n          newErrors.cpassword = \"Password is required\";\r\n        } else {\r\n          const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,16}$/;\r\n          if (!passwordRegex.test(cpassword)) {\r\n            newErrors.cpassword = \"Password must be 8-16 characters, contain uppercase, lowercase, number, and special character.\";\r\n          }\r\n        }\r\n        if (!cphonenumber) {\r\n          newErrors.cphonenumber = \"Phonenumber is required\";\r\n        } else if(!cphonenumber.length===10) {\r\n            newErrors.cphonenumber = \"Phone number must be 10 Digits\";\r\n        }\r\n        if (!calterphonenumber) {\r\n          newErrors.calterphonenumber = \"Alterphonenumber is required\";\r\n        } else if(!calterphonenumber.length===10) {\r\n            newErrors.calterphonenumber = \"Phone number must be 10 Digits\";\r\n        }\r\n        if (!cpannumber) {\r\n          newErrors.cpannumber = \"Pan number is required\";\r\n        } else if(!cpannumber.length===10) {\r\n            newErrors.cpannumber = \"Pan number must be 10 Digits\";\r\n        }\r\n        if (!caadharnumber) {\r\n          newErrors.caadharnumber = \"Aadhar number is required\";\r\n        } else if(!caadharnumber.length===12) {\r\n            newErrors.caadharnumber = \"Aadhar number must be 12 Digits\";\r\n        }\r\n       \r\n        if (!caddressLine1) newErrors.caddressLine1 = \"Door No is required\";\r\n        if (!caddressLine2) newErrors.caddressLine2 = \"Street/Area  is required\";\r\n        \r\n        if (!ccity) newErrors.ccity = \"City is required\";\r\n        if (!cstate) newErrors.cstate = \"State is required\";\r\n        if (!cpincode) newErrors.cpincode = \"Pincode is required\";\r\n     \r\n    \r\n     \r\n    \r\n      return newErrors;\r\n    };\r\n  \r\n    \r\n  \r\n    const handleSave = () => {\r\n      const validationErrors = validateStep();\r\n      if (Object.keys(validationErrors).length > 0) {\r\n        setErrors(validationErrors); \r\n      } else {\r\n        setErrors({});\r\n        handlefreelancer()\r\n    handleCreateClose()\r\n      }\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <Box mb={5} sx={{ flexGrow: 1 }}>\r\n    <AppBar style={{backgroundColor:\"#2d2859\",color:\"#fff\"}}  position=\"static\">\r\n      <Toolbar  variant=\"dense\">\r\n        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={6} container direction=\"row\" alignItems=\"center\">\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 0.5 }}>\r\n              <CategoryIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n              Freelancer List\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n            <Button onClick={handleCreateOpen} color=\"inherit\"> <AddCircleIcon sx={{ mr: 0.5 }}/> Add Freelancer</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog open={create} onClose={handleCreateClose} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Create Freelancer\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <Grid mt={2} container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        value={cname}\r\n                        onChange={(e) => setCName(e.target.value)}\r\n                        error={!!errors.cname}\r\n                        helperText={errors.cname}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        value={cemail}\r\n                        onChange={(e) => setCEmail(e.target.value)}\r\n                        error={!!errors.cemail}\r\n                        helperText={errors.cemail}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        value={cpassword}\r\n                        onChange={(e) => setCPassword(e.target.value)}\r\n                        error={!!errors.cpassword}\r\n                        helperText={errors.cpassword}\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                    <FormControl fullWidth margin=\"normal\" >\r\n        <InputLabel id=\"demo-multiple-chip-label\">Membership</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          value={type}\r\n          onChange={handleMembership}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Membership\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {Array.isArray(plan)&& plan.map((member) => (\r\n            <MenuItem\r\n              key={member._id}\r\n              value={member.planname}\r\n              style={getStyles( cname,type, theme)}\r\n            >\r\n              {member.planname}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n                    </Grid> */}\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Membership\"\r\n                        variant=\"outlined\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)}\r\n                       \r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        variant=\"outlined\"\r\n                        value={cphonenumber}\r\n                        onChange={(e) => setCPhonenumber(e.target.value)}\r\n                        error={!!errors.cphonenumber}\r\n                        helperText={errors.cphonenumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Alter Phone Number\"\r\n                        variant=\"outlined\"\r\n                        value={calterphonenumber}\r\n                        onChange={(e) => setCAlternumber(e.target.value)}\r\n                        error={!!errors.calterphonenumber}\r\n                        helperText={errors.calterphonenumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Aadhar Number\"\r\n                        variant=\"outlined\"\r\n                        value={caadharnumber}\r\n                        onChange={(e) => setCAadharnumber(e.target.value)}\r\n                        error={!!errors.caadharnumber}\r\n                        helperText={errors.caadharnumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"PAN Number\"\r\n                        variant=\"outlined\"\r\n                        value={cpannumber}\r\n                        onChange={(e) => setCPannumber(e.target.value)}\r\n                        error={!!errors.cpannumber}\r\n                        helperText={errors.cpannumber}\r\n                      />\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address Line 1\"\r\n                        variant=\"outlined\"\r\n                        value={caddressLine1}\r\n                        onChange={(e) => setCAddressLine1(e.target.value)}\r\n                        error={!!errors.caddressLine1}\r\n                        helperText={errors.caddressLine1}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address Line 2\"\r\n                        variant=\"outlined\"\r\n                        value={caddressLine2}\r\n                        onChange={(e) => setCAddressLine2(e.target.value)}\r\n                        error={!!errors.caddressLine2}\r\n                        helperText={errors.caddressLine2}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n              label=\"Pincode\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={cpincode}\r\n              onChange={(e) => setCPincode(e.target.value)}\r\n              error={!!errors.cpincode}\r\n              helperText={errors.cpincode}\r\n            />\r\n                    </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField\r\n              label=\"City\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={ccity}\r\n              \r\n              onChange={(e) => setCCity(e.target.value)}\r\n              InputProps={{ readOnly: true }}\r\n              error={!!errors.ccity}\r\n              helperText={errors.ccity}\r\n            />\r\n            </Grid>\r\n           \r\n            <Grid item xs={12}>\r\n            <TextField\r\n              label=\"State\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={cstate}\r\n              \r\n              onChange={(e) => setCState(e.target.value)}\r\n              InputProps={{ readOnly: true }}\r\n              error={!!errors.cstate}\r\n              helperText={errors.cstate}\r\n            />\r\n            </Grid>\r\n                    <Grid mt={2} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" >\r\n                      <Typography>Approve</Typography>\r\n                    <Switch\r\n  checked={approve}\r\n  onChange={handleApprove}\r\n  inputProps={{ 'aria-label': 'controlled' }}\r\n/>\r\n                    </Grid>\r\n                    <Grid mt={2} sx={{padding:1}} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n                  <Button autoFocus onClick={handleCreateClose} sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleSave}  sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} >Save</Button>\r\n                  </Grid>\r\n                  </Grid>\r\n                </DialogContent>\r\n               \r\n              </Dialog>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n     \r\n            <TableContainer  component={Paper}>\r\n              <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell>User Name</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Phone Number</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Mail</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Earnings</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Membership</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Details</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Edit</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {data.length > 0 ? (\r\n  data\r\n    .filter((item) => item.role === 'freelancer')\r\n    .map((item, index) => (\r\n      <StyledTableRow key={index}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {item.username}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"center\">{item.phonenumber}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">{item.email}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">{item.earning}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">{item.membership}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">\r\n          <InfoIcon onClick={() => handleClickOpen(item._id)} />\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"center\">\r\n          <IconButton onClick={handleMenuOpen}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            open={menuOpen}\r\n            onClose={handleMenuClose}\r\n            MenuListProps={{\r\n              'aria-labelledby': 'basic-button',\r\n            }}\r\n          >\r\n            <MenuItem onClick={() => handleEditOpen(item._id)}>Edit</MenuItem>\r\n            <MenuItem onClick={() => handleDeleteOpen(item._id)}>Delete</MenuItem>\r\n            <MenuItem onClick={() => handleMessageOpen(item._id)}>Message</MenuItem>\r\n          </Menu>\r\n        </StyledTableCell>\r\n      </StyledTableRow>\r\n    ))\r\n) : (\r\n  <Typography>No data available</Typography>\r\n)}\r\n                </TableBody>\r\n              </Table>\r\n\r\n              {/* User Details Dialog */}\r\n              <Dialog open={detailsopen} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"User Details\"}</DialogTitle>\r\n                <DialogContent sx={{ width: '500px' }}>\r\n                  <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                    <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                      {/* Left Column */}\r\n                      <Grid item xs={6} container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">Name:</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">Phone:</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">Email:</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">Address:</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">City:</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">State:</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">Pincode:</Typography>\r\n                      </Grid>\r\n\r\n                      {/* Right Column */}\r\n                      <Grid item xs={6} container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">{user.username || ''}</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">{user.phonenumber || ''}</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">{user.email || ''}</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">\r\n                          {user.addressline1 || ''} {user.addressline2 || ''}\r\n                        </Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">{user.city || ''}</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">{user.state || ''}</Typography>\r\n                        <Typography sx={{ fontSize: '15px' }} align=\"center\">{user.pincode || ''}</Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button autoFocus onClick={handleClose}>\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n\r\n              {/* Edit User Dialog */}\r\n              <Dialog open={edit} onClose={handleEditClose} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Edit Freelancer\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <Grid mt={2} container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                    <FormControl fullWidth margin=\"normal\" >\r\n        <InputLabel id=\"demo-multiple-chip-label\">Membership</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          value={etype}\r\n          onChange={handleMembership}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Membership\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {Array.isArray(plan)&& plan.map((member) => (\r\n            <MenuItem\r\n              key={member._id}\r\n              value={member.planname}\r\n              style={getStyles( cname,etype, theme)}\r\n            >\r\n              {member.planname}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n                    </Grid> */}\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Membership\"\r\n                        variant=\"outlined\"\r\n                        value={etype}\r\n                        onChange={(e) => setEType(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        variant=\"outlined\"\r\n                        value={phonenumber}\r\n                        onChange={(e) => setPhonenumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Aadhar Number\"\r\n                        variant=\"outlined\"\r\n                        value={aadharnumber}\r\n                        onChange={(e) => setAadharnumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"PAN Number\"\r\n                        variant=\"outlined\"\r\n                        value={pannumber}\r\n                        onChange={(e) => setPannumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Membership\"\r\n                        variant=\"outlined\"\r\n                        value={membership}\r\n                        onChange={(e) => setMembership(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address Line 1\"\r\n                        variant=\"outlined\"\r\n                        value={addressLine1}\r\n                        onChange={(e) => setAddressLine1(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address Line 2\"\r\n                        variant=\"outlined\"\r\n                        value={addressLine2}\r\n                        onChange={(e) => setAddressLine2(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"City\"\r\n                        variant=\"outlined\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Pincode\"\r\n                        variant=\"outlined\"\r\n                        value={pincode}\r\n                        onChange={(e) => setPincode(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"State\"\r\n                        variant=\"outlined\"\r\n                        value={state}\r\n                        onChange={(e) => setState(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid mt={2} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" >\r\n                      <Typography>Approve</Typography>\r\n                    <Switch\r\n  checked={checked}\r\n  onChange={handleChange}\r\n  inputProps={{ 'aria-label': 'controlled' }}\r\n/>\r\n                    </Grid>\r\n                    <Grid mt={2} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\"  >\r\n                    <Button autoFocus sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}} onClick={handleEditClose}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleSubmit}>Save</Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </DialogContent>\r\n              </Dialog>\r\n              <Dialog\r\n        open={deleteopen}\r\n        onClose={handleDeleteClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Delete Freelancer\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n           Are you sure, You want to delete this User\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button variant='contained' sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}  onClick={handleDeleteClose}>\r\n           No\r\n          </Button>\r\n          <Button variant='contained' sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleDelete} s>\r\n            Yes\r\n          </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={messageopen}\r\n        onClose={handleMessageClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogContent sx={{width:\"400px\"}}>\r\n          \r\n            <Typography className='mb-4' sx={{fontSize:\"16px\",width:\"100%\"}}>Send Message</Typography>\r\n           <Grid xs={12} container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\r\n            <TextField\r\n            label='Tittle'\r\n            className='mb-4'\r\n            onChange={(e)=>setTittle(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n            label='Message'\r\n            className='mb-2'\r\n            onChange={(e)=>setDescription(e.target.value)}\r\n            />\r\n           </Grid>\r\n           <Grid mt={5} container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button variant='contained' sx={{ fontSize:\"10px\", backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}  onClick={handleMessageClose}>\r\n           Cancel\r\n          </Button>\r\n          <Button variant='contained' sx={{ fontSize:\"10px\", backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleMessage} s>\r\n            Send\r\n          </Button>\r\n          </Grid>\r\n          \r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n\r\n              {/* Snackbar for messages */}\r\n              <Snackbar open={msgOpen} autoHideDuration={6000} onClose={handleSnackClose}>\r\n                <Alert onClose={handleSnackClose} severity={color}>\r\n                  {msg}\r\n                </Alert>\r\n              </Snackbar>\r\n            </TableContainer>\r\n         \r\n        \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Freelancer;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11h-4v4h-2v-4H7v-2h4V7h2v4h4z\"\n}), 'AddCircle');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;"],"names":["StyledTableCell","styled","TableCell","_ref","theme","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","border","Freelancer","data","setData","useState","open","setOpen","detailsopen","setDetailsOpen","edit","setEdit","deletedata","setDelete","deleteopen","setDeleteOPen","user","setUser","name","setName","email","setEmail","phonenumber","setPhonenumber","aadharnumber","setAadharnumber","pannumber","setPannumber","membership","setMembership","addressLine1","setAddressLine1","addressLine2","setAddressLine2","city","setCity","pincode","setPincode","state","setState","cname","setCName","cemail","setCEmail","cpassword","setCPassword","calterphonenumber","setCAlternumber","cphonenumber","setCPhonenumber","caadharnumber","setCAadharnumber","cpannumber","setCPannumber","cmembership","setCMembership","caddressLine1","setCAddressLine1","caddressLine2","setCAddressLine2","ccity","setCCity","cpincode","setCPincode","cstate","setCState","editData","setEditData","msgOpen","setMsgOpen","setColor","msg","setMsg","type","setType","etype","setEType","plan","getPlan","tittle","setTittle","useTheme","description","setDescription","userid","setUserid","fcmtoken","setFcmtoken","messageopen","setMessageOPen","navigate","useNavigate","useEffect","token","Cookies","get","decodedToken","jwtDecode","currentTime","Date","now","exp","remove","error","console","getUserData","getMembership","log","fetch","method","redirect","then","async","response","status","status_code","json","result","catch","getDataById","userId","username","addressline1","addressline2","setChecked","isapprove","fcmToken","_error$response5","_error$response5$data","message","_error$response6","_error$response6$data","create","setCreate","handleCreateClose","handleClose","handleEditClose","handleDeleteClose","handleMessageClose","handleSnackClose","anchorEl","setAnchorEl","menuOpen","Boolean","handleMenuOpen","event","currentTarget","handleMenuClose","checked","React","approve","setApprove","pincodedata","setPincodedata","length","Status","PostOffice","postOffice","District","State","errors","setErrors","_jsxs","_Fragment","children","_jsx","Box","mb","sx","flexGrow","AppBar","style","position","Toolbar","variant","Grid","container","direction","justifyContent","alignItems","item","xs","IconButton","edge","mr","CategoryIcon","Typography","component","Button","onClick","handleCreateOpen","AddCircleIcon","Dialog","onClose","DialogTitle","id","DialogContent","mt","spacing","TextField","fullWidth","label","value","onChange","e","target","helperText","InputProps","readOnly","Switch","inputProps","padding","autoFocus","handleSave","validationErrors","validateStep","newErrors","test","validateEmail","Object","keys","handlefreelancer","myHeaders","Headers","append","raw","JSON","stringify","headers","_error$response3","_error$response3$data","_error$response4","_error$response4$data","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","filter","role","map","index","scope","earning","InfoIcon","handleClickOpen","_id","EditIcon","Menu","MenuListProps","MenuItem","handleEditOpen","handleDeleteOpen","handleMessageOpen","width","DialogActions","handleSubmit","requestOptions","undefined","_error$response","_error$response$data","_error$response2","_error$response2$data","EditUser","DialogContentText","handleDelete","userDelete","s","className","handleMessage","SendMessage","_error$response7","_error$response7$data","Snackbar","autoHideDuration","Alert","severity","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","cx","cy","r","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","overridesResolver","props","styles","root","overflowX","inProps","ref","useDefaultProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}