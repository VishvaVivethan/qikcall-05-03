{"version":3,"file":"static/js/444.187dc005.chunk.js","mappings":"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","sources":["views/base/serivces/Services.js","../node_modules/@mui/icons-material/AddCircle.js","../node_modules/@mui/icons-material/Category.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/LibraryBooks.js","../node_modules/@mui/icons-material/MoreVert.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CCollapse, CRow } from '@coreui/react'\r\n// import { DocsExample } from 'src/components'\r\n// import Typography from '../../theme/typography/Typography'\r\nimport {Typography,Button,Grid,TextField,Tooltip,Card,CardMedia,CardContent,IconButton,} from '@mui/material';\r\nimport Switch from '@mui/material/Switch';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport LibraryBooksIcon from '@mui/icons-material/LibraryBooks';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { FormControl, InputLabel, Select, OutlinedInput, Chip } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst Collapses = () => {\r\n  const [store, setStore] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [detailsOpen, setDetailsOpen] = useState(false);\r\n  const [selectedServiceId, setSelectedServiceId] = useState(null);\r\n  const [selectedServiceDetails, setSelectedServiceDetails] = useState(null);\r\n  const [deletedata, setDelete] = useState('');\r\n  const [deleteopen, setDeleteOPen] = useState(false);\r\n  const [color, setColor] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [msg, setMsg] = useState('');\r\n\r\n  const navigate = useNavigate('')\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    \r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      // If token is expired, remove the token and navigate to homepage\r\n      if (decodedToken.exp < currentTime) {\r\n        Cookies.remove('token');\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      Cookies.remove('token');\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n\r\n  useEffect(() => {\r\n    getServices();\r\n  }, []);\r\n\r\n  const getServices = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/servicelists\", { method: \"GET\", redirect: \"follow\" });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setStore(result.data); // Adjust based on your API response\r\n      } else {\r\n        console.error('Unexpected Error', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n    }\r\n  };\r\n\r\n  const getServiceById = async (serviceId) => {\r\n    try {\r\n      const response = await fetch(`/api/servicedata?id=${serviceId}`, { method: \"GET\", redirect: \"follow\" });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setSelectedServiceDetails(result.data); \r\n        setEName(result.data.servicename)\r\n        setENumber(result.data.number)\r\n        setEType(result.data.servicetype)\r\n        setEDescription(result.data.servicedescription)\r\n        setEAddressLine1(result.data.addressline1)\r\n        setEAddressLine2(result.data.addressline2)\r\n        setEArea(result.data.area)\r\n        setECity(result.data.city)\r\n        setEState(result.data.state)\r\n        setEPincode(result.data.pincode)\r\n        setELink(result.data.websitelink)\r\n        setEImages(result.data.addimages)\r\n        setChecked(result.data.isapprove)\r\n        setListed(result.data.freelisting)\r\n\r\n        console.log(result.data,\"dtat coming\")\r\n      } else {\r\n        console.error('Unexpected Error', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching service details:', error);\r\n    }\r\n  };\r\n\r\n  const [editdata,setEditdata] = useState('')\r\n  const [ename, setEName] = useState('');\r\n  const [enumber, setENumber] = useState('');\r\n  const [etype, setEType] = useState([]);\r\n  const [elink, setELink] = useState('');\r\n  const [edescription, setEDescription] = useState('');\r\n  const [eaddressLine1, setEAddressLine1] = useState('');\r\nconst [eaddressLine2, setEAddressLine2] = useState('');\r\nconst [earea, setEArea] = useState('');\r\nconst [ecity, setECity] = useState('');\r\nconst [epincode, setEPincode] = useState('');\r\nconst [estate, setEState] = useState('');\r\n  const [eimages, setEImages] = useState(['', '', '', '']);\r\n  const [check, setChecked] = React.useState(false); \r\n  const [list, setListed] = React.useState(false); \r\n\r\n  const handleApproveChange = (event) => {\r\n    console.log(event.target.checked,\"event.target.checked\")\r\n    setChecked(event.target.checked);  \r\n  };\r\n\r\n  const handleApproveList = (event) => {\r\n    console.log(event.target.checked,\"event.target.Listed\")\r\n    setListed(event.target.checked);  \r\n  };\r\n\r\n  const serviceUpdate = async () => {\r\n    try {\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n  \r\n      let uploadedImageUrl = [];\r\n  \r\n      // Only upload images if new images were selected\r\n      if (files.length > 0) {\r\n        uploadedImageUrl = await uploadimages();\r\n      }\r\n  \r\n      console.log(editServiceId, \"id coming in serviceUpdate\");  // Log the serviceId being used\r\n  \r\n      if (!editServiceId) {\r\n        console.error('No serviceId available');\r\n        return;\r\n      }\r\n  \r\n      // Use existing image URLs if no new images were uploaded\r\n      const finalImageUrls = uploadedImageUrl.length > 0 ? uploadedImageUrl : eimages; // `eimages` holds existing images\r\n  \r\n      const raw = JSON.stringify({\r\n        servicename: ename,\r\n        isapprove: check,\r\n        number: enumber,\r\n        servicetype: etype,\r\n        servicedescription: edescription,\r\n        addressline1: eaddressLine1,\r\n        addressline2: eaddressLine2,\r\n        area: earea,\r\n        city: ecity,\r\n        pincode: epincode,\r\n        state: estate,\r\n        freelisting:list,\r\n        websitelink: elink,\r\n        addimages: finalImageUrls  \r\n      });\r\n  \r\n      const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n  \r\n      fetch(`/api/serviceupdate?id=${editServiceId}`, requestOptions)\r\n        .then(async (response) => {\r\n          if (response.status === 200 || response.status === 400) {\r\n            return { status_code: response.status, data: await response.json() };\r\n          } else {\r\n            return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n          }\r\n        })\r\n        .then((result) => {\r\n          setEditdata(result);\r\n          getServices();\r\n          console.log(result);\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n  const userDelete = async (serviceId) => {\r\n    try {\r\n      const requestOptions = {\r\n        method: \"DELETE\",\r\n        redirect: \"follow\",\r\n      };\r\n      \r\n      const response = await fetch(`/api/delete_service?id=${serviceId}`, requestOptions);\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setDelete(result);\r\n        console.log(\"Deleted data:\", result);\r\n        getServices(); \r\n      } else {\r\n        console.error(\"Error deleting service\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting service:\", error);\r\n    }\r\n  };\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [type, setType] = useState([]);\r\n  const [link, setLink] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [addressLine1, setAddressLine1] = useState('');\r\nconst [addressLine2, setAddressLine2] = useState('');\r\nconst [area, setArea] = useState('');\r\nconst [city, setCity] = useState('');\r\nconst [pincode, setPincode] = useState('');\r\nconst [state, setState] = useState('');\r\n  const [getData,setGetData] = useState('')\r\n  const [images, setImages] = useState(['', '', '', '']);\r\n  const [newcheck, setNewChecked] = React.useState(false); \r\n  const [newlist, setNewListed] = React.useState(false); \r\n  \r\n  const handleApproveNew = (event) => {\r\n    console.log(event.target.checked,\"event.target.checked\")\r\n    setNewChecked(event.target.checked);  \r\n  };\r\n\r\n  const handleListNew = (event) => {\r\n    console.log(event.target.checked,\"event.target.Listed\")\r\n    setNewListed(event.target.checked);  \r\n  };\r\n  \r\n  const handleService = async () => {\r\n    try {\r\n        \r\n        const uploadedImageUrl = await uploadimages();\r\n\r\n        // Prepare the request data\r\n        const raw = JSON.stringify({\r\n            \"servicename\": name,\r\n            \"number\": number,\r\n            \"servicetype\": type,\r\n            \"servicedescription\": description,\r\n            \"addressline1\": addressLine1,\r\n  \"addressline2\": addressLine2,\r\n  \"area\": area,\r\n  \"city\": city,\r\n  \"pincode\": pincode,\r\n  \"state\": state,\r\n            \"websitelink\": link,\r\n            \"addimages\": uploadedImageUrl,\r\n            \"isapprove\":newcheck,\r\n            \"freelisting\":newlist \r\n        });\r\n\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        // Make the service request\r\n        const response = await fetch(\"/api/service\", requestOptions);\r\n        const result = {\r\n            status_code: response.status,\r\n            data: await response.json()\r\n        };\r\n        console.log(result.data,\"++++++++++\")\r\n\r\n        // Handle the response\r\n        if (result.status_code === 200) {\r\n            setOpen(true);\r\n            getServices();\r\n            setColor('success');\r\n            \r\n            setMsg(result.data.msg );\r\n        } else if (result.status_code === 400) {\r\n            setOpen(true);\r\n            setColor('error');\r\n            setMsg(result.data.msg );\r\n        }\r\n    } catch (error) {\r\n        setOpen(true);\r\n        setColor('error');\r\n        setMsg('An unexpected error occurred');\r\n        console.error(error);\r\n    }\r\n};\r\n\r\nuseEffect(()=>{\r\n  GetCategory()\r\n},[])\r\n\r\nconst GetCategory= ()=>{\r\ntry{\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    redirect: \"follow\"\r\n  };\r\n  \r\n  fetch(\"/api/categorylist\", requestOptions)\r\n  .then(async (response) => {\r\n    if (response.status === 200 || response.status === 400) {\r\n      return { status_code: response.status, data: await response.json() };\r\n    } else {\r\n      return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n    }\r\n  })\r\n  .then((result) => {\r\n    setGetData(result.data.data)\r\n    console.log(result.data.data,\"good\")\r\n   })\r\n  .catch(error => console.log('error', error));\r\n}catch(error){\r\n  console.log('error', error)\r\n}\r\n\r\n}\r\n\r\n  const handledClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const[files,setFiles] = useState('')\r\n\r\n  const handleImageChange = (index, event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (file.type.startsWith('image/')) {\r\n        const newImages = [...images];\r\n        newImages[index] = URL.createObjectURL(file); // Show the image preview\r\n        setImages(newImages);\r\n        setEImages(newImages);\r\n        \r\n        // Save the file object in state for later uploading\r\n        const newFiles = [...files];\r\n        newFiles[index] = file;\r\n        setFiles(newFiles);\r\n      } else {\r\n        alert('Please select a valid image file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditImageChange = (index, event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (file.type.startsWith('image/')) {\r\n        const newEImages = [...eimages];\r\n        newEImages[index] = URL.createObjectURL(file); // Show the image preview\r\n        setEImages(newEImages); // Set edited images for preview\r\n  \r\n        const newFiles = [...files];\r\n        newFiles[index] = file; // Save the file object for later upload\r\n        setFiles(newFiles);\r\n      } else {\r\n        alert('Please select a valid image file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const uploadimages = async () => {\r\n    try {\r\n      // Convert files to an array\r\n      const filesArray = Array.from(files); \r\n  \r\n      const uploadedImageUrls = await Promise.all(filesArray.map(async (file) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('upload_preset', 'ae1kvvqp');\r\n  \r\n        const response = await fetch('https://api.cloudinary.com/v1_1/qikcall/image/upload', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n  \r\n        const data = await response.json();\r\n  \r\n        if (data.secure_url) {\r\n          console.log(data.secure_url, \"data\")\r\n          return data.secure_url;\r\n        } else {\r\n          throw new Error('Failed to upload image.');\r\n        }\r\n      }));\r\n  \r\n      return uploadedImageUrls;\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setType(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  const handleEditChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEType(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  \r\n  const [create,setCreate]=useState('')\r\n  const [editopen,setEditopen] = useState('')\r\n  const [editServiceId,setEditServiceId] = useState('')\r\n\r\n  const handleNewRegister =()=>{\r\n    handleService()\r\n    handleCreateClose()\r\n  }\r\n\r\n  const handleCreateOpen = async () => {\r\n    setCreate(true)\r\n  };\r\n\r\n  const handleCreateClose = () => {\r\n    setCreate(false); \r\n  };\r\n  \r\n\r\n  const handleMenuOpen = (event, serviceId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedServiceId(serviceId);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickOpen = async () => {\r\n    if (selectedServiceId) {\r\n      await getServiceById(selectedServiceId);\r\n      setDetailsOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDetailsOpen(false);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDeleteOpen = async () => {\r\n    if (selectedServiceId) {\r\n      await getServiceById(selectedServiceId);\r\n      setDeleteOPen(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setDeleteOPen(false);\r\n  };\r\n\r\n  const handleEditOpen =  () => {\r\n    if (selectedServiceId) {\r\n      getServiceById(selectedServiceId);\r\n      console.log(selectedServiceId, \"id coming in handleEditOpen\");\r\n      setEditopen(true);\r\n      setEditServiceId(selectedServiceId);  // Ensure you are saving the serviceId somewhere\r\n    }\r\n  };\r\n  \r\n  const handleEditClose = () => {\r\n    setEditopen(false);\r\n  };\r\n\r\nconst handleEditUpdate =()=>{\r\n  serviceUpdate();\r\n  handleEditClose();\r\n  handleMenuClose()\r\n  }\r\n  \r\n\r\n  const handleDelete = () => {\r\n    if (selectedServiceId) {\r\n      userDelete(selectedServiceId); // Delete by selectedServiceId\r\n      setDeleteOPen(false);\r\n      handleMenuClose()\r\n      \r\n    }\r\n  };\r\n\r\n  const menuopen = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n    <Box mb={5} sx={{ flexGrow: 1 }}>\r\n    <AppBar position=\"static\" style={{ backgroundColor: \"#2d2859\", color: \"#fff\" }}  >\r\n      <Toolbar variant=\"dense\">\r\n        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={6} container direction=\"row\" alignItems=\"center\">\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 0.5 }}>\r\n              <CategoryIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n              Service List\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n            <Button onClick={handleCreateOpen} color=\"inherit\"> <AddCircleIcon sx={{ mr: 0.5 }}/> Add Services</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n       \r\n        open={create}\r\n        onClose={handleCreateClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogContent sx={{width:\"600px\"}}>\r\n        <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              sx={{ marginBottom: '2rem', color: '#333366' }}\r\n            >\r\n              Service Profile\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <TextField\r\n                id=\"service-name\"\r\n                variant=\"outlined\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                label=\"Service Name\"\r\n                InputProps={{\r\n                  style: {\r\n                    color: '#000',\r\n                    borderColor: '#333366'\r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n            {/* <InputLabel id=\"demo-multiple-chip-number\">Mobile Number</InputLabel> */}\r\n              <TextField\r\n              // labelId=\"demo-multiple-chip-number\"\r\n                id=\"service-number\"\r\n                variant=\"outlined\"\r\n                value={number}\r\n                label=\"Mobile Number\"\r\n                onChange={(e) => setNumber(e.target.value)}\r\n                \r\n                InputProps={{\r\n                  style: {\r\n                    color: '#000',\r\n                    borderColor: '#333366',\r\n                    \r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth margin=\"normal\" >\r\n        <InputLabel id=\"demo-multiple-chip-label\">Category</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          multiple\r\n          value={type}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Category\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {Array.isArray(getData)&& getData.map((category) => (\r\n            <MenuItem\r\n              key={category._id}\r\n              value={category.categoryname}\r\n              style={getStyles(name, type, theme)}\r\n            >\r\n              {category.categoryname}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth margin=\"normal\">\r\n            {/* <InputLabel id=\"demo-multiple-chip-number\">Mobile Number</InputLabel> */}\r\n              <TextField\r\n              // labelId=\"demo-multiple-chip-number\"\r\n                id=\"service-description\"\r\n                variant=\"outlined\"\r\n                value={description}\r\n                label=\"Service Description\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                \r\n                InputProps={{\r\n                  style: {\r\n                    color: '#000',\r\n                    borderColor: '#333366',\r\n                    \r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n      <Typography  sx={{ fontSize: \"25px\", fontWeight: \"bold\", marginBottom: 2,marginTop:2 }}>\r\n                Address:\r\n              </Typography>\r\n              <TextField\r\n                label=\"Door No\"\r\n                variant=\"outlined\"\r\n                value={addressLine1}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setAddressLine1(e.target.value)\r\n                }}\r\n\r\n              />\r\n              <TextField\r\n                label=\"Street/Colony\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={addressLine2}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setAddressLine2(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Area\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={area}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setArea(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"City\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={city}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setCity(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Pincode\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={pincode}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setPincode(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"State\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setState(e.target.value)\r\n                }}\r\n              />\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                <Typography variant=\"body2\" sx={{ color: '#333366' }}>*Optional</Typography>\r\n              </Box>\r\n              <TextField\r\n                id=\"website-link\"\r\n                variant=\"outlined\"\r\n                value={link}\r\n                onChange={(e) => setLink(e.target.value)}\r\n               label=\"Website link\"\r\n                InputProps={{\r\n                  style: {\r\n                    color: '#333366',\r\n                    borderColor: '#333366'\r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              align=\"center\"\r\n              sx={{ marginTop: '2rem', marginBottom: '1rem', color: '#333366' }}\r\n            >\r\n              Add Images\r\n            </Typography>\r\n\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n              {/* First Row */}\r\n              <Grid container item xs={12} spacing={2} justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                {images.slice(0, 2).map((image, index) => (\r\n                  <Grid item xs={12} sm={5} md={4} key={index}>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: 'none' }}\r\n                      id={`file-input-${index}`}\r\n                      type=\"file\"\r\n                      onChange={(event) => handleImageChange(index, event)}\r\n                    />\r\n                    <label htmlFor={`file-input-${index}`}>\r\n                      <IconButton component=\"span\">\r\n                        <Card sx={{ width: '200px' }}>\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            height=\"140\"\r\n                            image={image}\r\n                            alt={`Image ${index + 1}`}\r\n                            sx={{ cursor: 'pointer', width: '100%' }}\r\n                          />\r\n                        </Card>\r\n                      </IconButton>\r\n                    </label>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              </Grid>\r\n              <Grid  mt={4} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n             <Typography>Approve</Typography>\r\n             <Switch\r\n                  checked={newcheck}\r\n                  onChange={handleApproveNew}\r\n                  inputProps={{ 'aria-label': 'controlled' }}\r\n                />\r\n             </Grid>\r\n\r\n             <Grid  mt={2} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n             <Typography>Freelisting</Typography>\r\n             <Switch\r\n                  checked={newlist}\r\n                  onChange={handleListNew}\r\n                  inputProps={{ 'aria-label': 'controlled' }}\r\n                />\r\n             </Grid>\r\n              <Grid mt={5} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleCreateClose} sx={{ borderRadius: 50, fontSize: \"12px\", backgroundColor: \"#282866\",marginLeft:\"5px\" }}>\r\n              Close\r\n            </Button>\r\n         \r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={()=>{\r\n              if(!name){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Name required');\r\n                return\r\n              }\r\n              if(!number){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Number required');\r\n                return\r\n              }\r\n              if(number.length!==10){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Phone Number must have 10 numbers');\r\n                return\r\n              }\r\n              if(!type){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Category required');\r\n                return\r\n              }\r\n              if(!images){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Images required');\r\n                return\r\n              }\r\n              if(!addressLine1){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Address Line 1 required');\r\n                return\r\n              }\r\n              if(!addressLine2){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Address Line 2 required');\r\n                return\r\n              }\r\n              if(!area){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Area required');\r\n                return\r\n              }\r\n              if(!city){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('City required');\r\n                return\r\n              }\r\n              if(!state){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('State required');\r\n                return\r\n              }\r\n              if(!pincode){\r\n                setOpen(true);\r\n                setColor('error');\r\n                setMsg('Pincode required');\r\n                return\r\n              }\r\n              handleNewRegister()\r\n            \r\n            }}\r\n            sx={{ borderRadius: 50, fontSize: \"12px\", backgroundColor: \"#282866\",marginRight:\"5px\" }}\r\n          >\r\n           Submit\r\n          </Button>\r\n         \r\n          </Grid>\r\n              \r\n        </DialogContent>\r\n      </Dialog>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n      <Grid mb={5} container spacing={2}>\r\n        {Array.isArray(store) && store.length > 0 ? (\r\n          store.map((item) => (\r\n            <Grid item xs={12} md={6} key={item._id}>\r\n              <Card  sx={{ padding: 1, position: 'relative',width:\"100%\",height:\"100%\" }}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-around\" alignItems=\"center\">\r\n                  <Grid item xs={5}>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      sx={{ width: \"100%\", height: \"200%\" }}\r\n                      image={item.addimages[0]} // Your image source here from item\r\n                      alt={item.servicename} // Your alt text\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"flex-start\">\r\n                    <Typography sx={{ fontSize: \"15px\" }}><b>Store Name:</b> {item.servicename}</Typography>\r\n                    <Typography sx={{ fontSize: \"15px\", marginTop: \"8px\" }}><b>Phone Number:</b> {item.number}</Typography>\r\n                    <Typography sx={{ fontSize: \"15px\", marginTop: \"8px\" }}><b>Category:</b> {item.servicetype.join(', ')}</Typography>\r\n                    <Typography sx={{ fontSize: \"15px\", marginTop: \"8px\" }}><b>Address:</b> {item.addressline1}, {item.addressline2}, {item.city}, {item.pincode}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <IconButton sx={{ position: 'absolute', top: 8, right: 8 }} onClick={(event) => handleMenuOpen(event, item._id)}>\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"long-menu\"\r\n                  MenuListProps={{ 'aria-labelledby': 'long-button' }}\r\n                  anchorEl={anchorEl}\r\n                  open={menuopen}\r\n                  onClose={handleMenuClose}\r\n                  slotProps={{ paper: { style: { maxHeight: ITEM_HEIGHT * 4.5, width: '20ch' } } }}\r\n                >\r\n                  <MenuItem onClick={handleClickOpen}>\r\n                    <LibraryBooksIcon sx={{ fontSize: \"15px\", color: \"green\", marginRight: \"5px\" }} /> Show details\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => handleEditOpen(item._id)}>\r\n                    <EditIcon sx={{ fontSize: \"15px\", color: \"blue\", marginRight: \"5px\" }} /> Edit\r\n                  </MenuItem>\r\n                  <MenuItem onClick={() => handleDeleteOpen(item._id)}>\r\n                    <DeleteIcon sx={{ fontSize: \"15px\", color: \"red\", marginRight: \"5px\" }} /> Delete\r\n                  </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                  open={detailsOpen}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                  <DialogTitle id=\"responsive-dialog-title\">{\"Store Details\"}</DialogTitle>\r\n                  <DialogContent sx={{ width: \"500px\" }}>\r\n                  {selectedServiceDetails ? (\r\n  <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n    <Grid mt={2} mb={2} container item direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n      {/* Left Column */}\r\n      <Grid item xs={6} container direction=\"column\" alignItems=\"flex-start\">\r\n        <Typography sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          <b>Name:</b> {selectedServiceDetails.servicename}\r\n        </Typography>\r\n        <Typography className='mt-2' sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          <b>Websitelink:</b> {selectedServiceDetails.websitelink}\r\n        </Typography>\r\n        <Typography className='mt-2' sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          <b>Address:</b> {selectedServiceDetails.addressline1}, {selectedServiceDetails.addressline2}\r\n        </Typography>\r\n        <Typography className='mt-2' sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          <b>Area:</b> {selectedServiceDetails.area}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {/* Right Column */}\r\n      <Grid item xs={6} container direction=\"column\" alignItems=\"flex-start\">\r\n      <Typography  sx={{ fontSize: \"12px\" }} align=\"left\">\r\n         <b> Phone:</b> {selectedServiceDetails.number}\r\n        </Typography>\r\n        <Typography className='mt-2' sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          City: {selectedServiceDetails.city}\r\n        </Typography>\r\n        <Typography className='mt-2' sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          Pincode: {selectedServiceDetails.pincode}\r\n        </Typography>\r\n        <Typography className='mt-2' sx={{ fontSize: \"12px\" }} align=\"left\">\r\n          Categories: {selectedServiceDetails.servicetype.join(', ')}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n\r\n    {/* Centered Image */}\r\n    <Typography align='left' className='mt-2' sx={{ fontSize: \"20px\",fontWeight:\"bold\" }}>Gallery</Typography>\r\n    <Grid item xs={8} >\r\n      <CardMedia\r\n        component=\"img\"\r\n        sx={{ width: \"100%\", height: \"auto\" }}\r\n        image={selectedServiceDetails.addimages[0]} // Image source here\r\n        alt={selectedServiceDetails.servicename} // Alt text\r\n      />\r\n    </Grid>\r\n  </Grid>\r\n) : (\r\n  <Typography variant=\"body2\">Loading...</Typography>\r\n)}\r\n\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n        open={deleteopen}\r\n        onClose={handleDeleteClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Delete Services\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n           Are you sure, You want to delete this Service\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button  onClick={handleDeleteClose}>\r\n           No\r\n          </Button>\r\n          <Button onClick={handleDelete} >\r\n            Yes\r\n          </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={editopen}\r\n        onClose={handleEditClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Edit Services\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n        <Typography\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              sx={{ marginBottom: '2rem', color: '#333366' }}\r\n            >\r\n              Service Profile\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <TextField\r\n                id=\"service-name\"\r\n                variant=\"outlined\"\r\n                value={ename}\r\n                onChange={(e) => setEName(e.target.value)}\r\n                label=\"Service Name\"\r\n                InputProps={{\r\n                  style: {\r\n                    color: '#000',\r\n                    borderColor: '#333366'\r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n            {/* <InputLabel id=\"demo-multiple-chip-number\">Mobile Number</InputLabel> */}\r\n              <TextField\r\n              // labelId=\"demo-multiple-chip-number\"\r\n                id=\"service-number\"\r\n                variant=\"outlined\"\r\n                value={enumber}\r\n                label=\"Mobile Number\"\r\n                onChange={(e) => setENumber(e.target.value)}\r\n                \r\n                InputProps={{\r\n                  style: {\r\n                    color: '#000',\r\n                    borderColor: '#333366',\r\n                    \r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth margin=\"normal\" >\r\n        <InputLabel id=\"demo-multiple-chip-label\">Category</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          multiple\r\n          value={etype}\r\n          onChange={handleEditChange}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Category\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {Array.isArray(getData)&& getData.map((category) => (\r\n            <MenuItem\r\n              key={category._id}\r\n              value={category.categoryname}\r\n              style={getStyles(name, type, theme)}\r\n            >\r\n              {category.categoryname}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth margin=\"normal\">\r\n  <TextField\r\n    id=\"service-description\"\r\n    variant=\"outlined\"\r\n    value={edescription}\r\n    label=\"Service Description\"\r\n    onChange={(e) => setEDescription(e.target.value)}\r\n    InputLabelProps={{\r\n      shrink: true,  // This will shrink the label\r\n    }}\r\n    InputProps={{\r\n      style: {\r\n        color: '#000',\r\n        borderColor: '#333366',\r\n      },\r\n    }}\r\n  />\r\n</FormControl>\r\n      <Typography  sx={{ fontSize: \"25px\", fontWeight: \"bold\", marginBottom: 2,marginTop:2 }}>\r\n                Address:\r\n              </Typography>\r\n              <TextField\r\n                label=\"Door No\"\r\n                variant=\"outlined\"\r\n                value={eaddressLine1}\r\n                fullWidth\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setEAddressLine1(e.target.value)\r\n                }}\r\n\r\n              />\r\n              <TextField\r\n                label=\"Street/Colony\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={eaddressLine2}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setEAddressLine2(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Area\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={earea}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setEArea(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"City\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={ecity}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setECity(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Pincode\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={epincode}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setEPincode(e.target.value)\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"State\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={estate}\r\n                sx={{ marginBottom: 2 }}\r\n                onChange={(e)=>{\r\n                  setEState(e.target.value)\r\n                }}\r\n              />\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                <Typography variant=\"body2\" sx={{ color: '#333366' }}>*Optional</Typography>\r\n              </Box>\r\n              <TextField\r\n                id=\"website-link\"\r\n                variant=\"outlined\"\r\n                value={elink}\r\n                onChange={(e) => setELink(e.target.value)}\r\n               label=\"Website link\"\r\n                InputProps={{\r\n                  style: {\r\n                    color: '#333366',\r\n                    borderColor: '#333366'\r\n                  },\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              align=\"center\"\r\n              sx={{ marginTop: '2rem', marginBottom: '1rem', color: '#333366' }}\r\n            >\r\n              Add Images\r\n            </Typography>\r\n\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n  <Grid container item xs={12} spacing={2} justifyContent=\"space-evenly\" alignItems=\"center\">\r\n    {eimages.slice(0, 2).map((image, index) => (\r\n      <Grid item xs={12} sm={5} md={4} key={index}>\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          id={`edit-file-input-${index}`}\r\n          type=\"file\"\r\n          onChange={(event) => handleEditImageChange(index, event)}\r\n        />\r\n        <label htmlFor={`edit-file-input-${index}`}>\r\n          <IconButton component=\"span\">\r\n            <Card sx={{ width: '200px' }}>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"140\"\r\n                image={image || 'default-image-placeholder.jpg'} // Show existing or updated image\r\n                alt={`Edit Image ${index + 1}`}\r\n                sx={{ cursor: 'pointer', width: '100%' }}\r\n              />\r\n            </Card>\r\n          </IconButton>\r\n        </label>\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n</Grid>\r\n              \r\n             <Grid  mt={4} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n             <Typography>Approve</Typography>\r\n             <Switch\r\n                  checked={check}\r\n                  onChange={handleApproveChange}\r\n                  inputProps={{ 'aria-label': 'controlled' }}\r\n                />\r\n             </Grid>\r\n\r\n             <Grid  mt={2} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n             <Typography>Freelisting</Typography>\r\n             <Switch\r\n                  checked={list}\r\n                  onChange={handleApproveList}\r\n                  inputProps={{ 'aria-label': 'controlled' }}\r\n                />\r\n             </Grid>\r\n              \r\n              <Grid mt={5} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleEditClose} sx={{ borderRadius: 50, fontSize: \"12px\", backgroundColor: \"#282866\",marginLeft:\"5px\" }}>\r\n              Close\r\n            </Button>\r\n         \r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={()=>{\r\n              // if(!name){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!number){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(number.length!==10){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Phone Number have 10 number');\r\n              //   return\r\n              // }\r\n              // if(!type){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!images){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!addressLine1){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!addressLine2){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!area){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!city){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!state){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              // if(!pincode){\r\n              //   setOpen(true);\r\n              //   setColor('error');\r\n              //   setMsg('Address required');\r\n              //   return\r\n              // }\r\n              handleEditUpdate()\r\n            \r\n            }}\r\n            sx={{ borderRadius: 50, fontSize: \"12px\", backgroundColor: \"#282866\",marginRight:\"5px\" }}\r\n          >\r\n           Submit\r\n          </Button>\r\n         \r\n          </Grid>\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button  onClick={handleEditClose}>\r\n           No\r\n          </Button>\r\n          <Button onClick={handleDelete} s>\r\n            Yes\r\n          </Button>\r\n          </Grid>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"body2\" color=\"text.secondary\">No Stores available</Typography>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Collapses;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11h-4v4h-2v-4H7v-2h4V7h2v4h4z\"\n}), 'AddCircle');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-1 9H9V9h10zm-4 4H9v-2h6zm4-8H9V5h10z\"\n}), 'LibraryBooks');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'MoreVert');"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Collapses","store","setStore","useState","anchorEl","setAnchorEl","detailsOpen","setDetailsOpen","selectedServiceId","setSelectedServiceId","selectedServiceDetails","setSelectedServiceDetails","deletedata","setDelete","deleteopen","setDeleteOPen","color","setColor","open","setOpen","msg","setMsg","navigate","useNavigate","useEffect","token","Cookies","get","decodedToken","jwtDecode","currentTime","Date","now","exp","remove","error","console","getServices","async","response","fetch","method","redirect","ok","result","json","data","status","getServiceById","concat","serviceId","setEName","servicename","setENumber","number","setEType","servicetype","setEDescription","servicedescription","setEAddressLine1","addressline1","setEAddressLine2","addressline2","setEArea","area","setECity","city","setEState","state","setEPincode","pincode","setELink","websitelink","setEImages","addimages","setChecked","isapprove","setListed","freelisting","log","editdata","setEditdata","ename","enumber","etype","elink","edescription","eaddressLine1","eaddressLine2","earea","ecity","epincode","estate","eimages","check","React","list","handleApproveChange","event","target","checked","handleApproveList","setName","setNumber","type","setType","link","setLink","description","setDescription","addressLine1","setAddressLine1","addressLine2","setAddressLine2","setArea","setCity","setPincode","setState","getData","setGetData","images","setImages","newcheck","setNewChecked","newlist","setNewListed","GetCategory","then","status_code","catch","files","setFiles","uploadimages","filesArray","Array","from","Promise","all","map","formData","FormData","append","file","body","secure_url","Error","useTheme","setPersonName","handleEditChange","value","split","create","setCreate","editopen","setEditopen","editServiceId","setEditServiceId","handleNewRegister","uploadedImageUrl","raw","JSON","stringify","myHeaders","Headers","requestOptions","headers","handleService","handleCreateClose","handleMenuClose","handleClickOpen","handleClose","handleDeleteClose","handleEditClose","handleEditUpdate","length","finalImageUrls","serviceUpdate","handleDelete","userDelete","menuopen","Boolean","_jsxs","_Fragment","children","_jsx","Box","mb","sx","flexGrow","AppBar","position","backgroundColor","Toolbar","variant","Grid","container","direction","justifyContent","alignItems","item","xs","IconButton","edge","mr","CategoryIcon","Typography","component","Button","onClick","AddCircleIcon","Dialog","onClose","DialogContent","align","marginBottom","FormControl","fullWidth","margin","TextField","id","onChange","e","label","InputProps","borderColor","InputLabel","Select","labelId","multiple","input","OutlinedInput","renderValue","selected","display","flexWrap","gap","Chip","isArray","category","MenuItem","categoryname","_id","fontSize","marginTop","spacing","slice","image","index","sm","md","accept","handleImageChange","startsWith","newImages","URL","createObjectURL","newFiles","alert","htmlFor","Card","CardMedia","height","alt","cursor","mt","Switch","inputProps","borderRadius","marginLeft","marginRight","padding","join","top","right","handleMenuOpen","currentTarget","MoreVertIcon","Menu","MenuListProps","slotProps","paper","LibraryBooksIcon","EditIcon","handleDeleteOpen","DeleteIcon","DialogTitle","className","DialogActions","DialogContentText","InputLabelProps","shrink","handleEditImageChange","newEImages","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","cx","cy","r"],"sourceRoot":""}