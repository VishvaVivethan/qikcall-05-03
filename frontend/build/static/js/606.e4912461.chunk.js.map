{"version":3,"file":"static/js/606.e4912461.chunk.js","mappings":"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","sources":["views/base/tooltips/Tooltips.js","../node_modules/@coreui/react/src/components/card/CCardHeader.tsx","../node_modules/@coreui/react/src/components/tooltip/CTooltip.tsx","../node_modules/@coreui/react/src/utils/executeAfterTransition.ts","../node_modules/@coreui/react/src/utils/getRTLPlacement.ts","../node_modules/@coreui/react/src/utils/getTransitionDurationFromElement.ts"],"sourcesContent":["import React from 'react'\r\nimport { CButton, CCard, CCardBody, CCardHeader, CLink, CTooltip, CRow, CCol } from '@coreui/react'\r\nimport { DocsExample } from '../../../components'\r\n\r\nconst Tooltips = () => {\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Tooltip</strong> <small>Basic example</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-body-secondary small\">Hover over the links below to see tooltips:</p>\r\n            <DocsExample href=\"components/tooltip\">\r\n              <p className=\"text-body-secondary\">\r\n                Tight pants next level keffiyeh\r\n                <CTooltip content=\"Tooltip text\">\r\n                  <CLink> you probably </CLink>\r\n                </CTooltip>\r\n                haven&#39;theard of them. Photo booth beard raw denim letterpress vegan messenger\r\n                bag stumptown. Farm-to-table seitan, mcsweeney&#39;s fixie sustainable quinoa 8-bit\r\n                american apparel\r\n                <CTooltip content=\"Tooltip text\">\r\n                  <CLink> have a </CLink>\r\n                </CTooltip>\r\n                terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo\r\n                thundercats. Tofu biodiesel williamsburg marfa, four loko mcsweeney&#39;&#39;s\r\n                cleanse vegan chambray. A really ironic artisan\r\n                <CTooltip content=\"Tooltip text\">\r\n                  <CLink> whatever keytar </CLink>\r\n                </CTooltip>\r\n                scenester farm-to-table banksy Austin\r\n                <CTooltip content=\"Tooltip text\">\r\n                  <CLink> twitter handle </CLink>\r\n                </CTooltip>\r\n                freegan cred raw denim single-origin coffee viral.\r\n              </p>\r\n            </DocsExample>\r\n            <p className=\"text-body-secondary small\">\r\n              Hover over the buttons below to see the four tooltips directions: top, right, bottom,\r\n              and left. Directions are mirrored when using CoreUI in RTL.\r\n            </p>\r\n            <DocsExample href=\"components/tooltip\">\r\n              <CTooltip\r\n                content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"\r\n                placement=\"top\"\r\n              >\r\n                <CButton color=\"secondary\">Tooltip on top</CButton>\r\n              </CTooltip>\r\n              <CTooltip\r\n                content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"\r\n                placement=\"right\"\r\n              >\r\n                <CButton color=\"secondary\">Tooltip on right</CButton>\r\n              </CTooltip>\r\n              <CTooltip\r\n                content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"\r\n                placement=\"bottom\"\r\n              >\r\n                <CButton color=\"secondary\">Tooltip on bottom</CButton>\r\n              </CTooltip>\r\n              <CTooltip\r\n                content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"\r\n                placement=\"left\"\r\n              >\r\n                <CButton color=\"secondary\">Tooltip on left</CButton>\r\n              </CTooltip>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Tooltips\r\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardHeader: PolymorphicRefForwardingComponent<'div', CCardHeaderProps> = forwardRef<\n  HTMLDivElement,\n  CCardHeaderProps\n>(({ children, as: Component = 'div', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-header', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardHeader.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardHeader.displayName = 'CCardHeader'\n","import React, { forwardRef, HTMLAttributes, ReactNode, useRef, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport { CConditionalPortal } from '../conditional-portal'\nimport { useForkedRef, usePopper } from '../../hooks'\nimport { fallbackPlacementsPropType, triggerPropType } from '../../props'\nimport type { Placements, Triggers } from '../../types'\nimport { executeAfterTransition, getRTLPlacement } from '../../utils'\n\nexport interface CTooltipProps extends Omit<HTMLAttributes<HTMLDivElement>, 'content'> {\n  /**\n   * Apply a CSS fade transition to the tooltip.\n   *\n   * @since 4.9.0\n   */\n  animation?: boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Appends the react tooltip to a specific element. You can pass an HTML element or function that returns a single element. By default `document.body`.\n   *\n   * @since 4.11.0\n   */\n  container?: DocumentFragment | Element | (() => DocumentFragment | Element | null) | null\n  /**\n   * Content node for your component.\n   */\n  content: ReactNode | string\n  /**\n   * The delay for displaying and hiding the tooltip (in milliseconds). When a numerical value is provided, the delay applies to both the hide and show actions. The object structure for specifying the delay is as follows: delay: `{ 'show': 500, 'hide': 100 }`.\n   *\n   * @since 4.9.0\n   */\n  delay?: number | { show: number; hide: number }\n  /**\n   * Specify the desired order of fallback placements by providing a list of placements as an array. The placements should be prioritized based on preference.\n   *\n   * @since 4.9.0\n   */\n  fallbackPlacements?: Placements | Placements[]\n  /**\n   * Offset of the tooltip relative to its target.\n   */\n  offset?: [number, number]\n  /**\n   * Callback fired when the component requests to be hidden.\n   */\n  onHide?: () => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: () => void\n  /**\n   * Sets which event handlers you’d like provided to your toggle prop. You can specify one trigger or an array of them.\n   *\n   * @type 'hover' | 'focus' | 'click'\n   */\n  trigger?: Triggers | Triggers[]\n  /**\n   * Describes the placement of your component after Popper.js has applied all the modifiers that may have flipped or altered the originally provided placement property.\n   */\n  placement?: 'auto' | 'top' | 'right' | 'bottom' | 'left'\n  /**\n   * Toggle the visibility of tooltip component.\n   */\n  visible?: boolean\n}\n\nexport const CTooltip = forwardRef<HTMLDivElement, CTooltipProps>(\n  (\n    {\n      children,\n      animation = true,\n      className,\n      container,\n      content,\n      delay = 0,\n      fallbackPlacements = ['top', 'right', 'bottom', 'left'],\n      offset = [0, 6],\n      onHide,\n      onShow,\n      placement = 'top',\n      trigger = ['hover', 'focus'],\n      visible,\n      ...rest\n    },\n    ref,\n  ) => {\n    const tooltipRef = useRef<HTMLDivElement>(null)\n    const togglerRef = useRef(null)\n    const forkedRef = useForkedRef(ref, tooltipRef)\n    const uID = useRef(`tooltip${Math.floor(Math.random() * 1_000_000)}`)\n\n    const { initPopper, destroyPopper, updatePopper } = usePopper()\n    const [mounted, setMounted] = useState(false)\n    const [_visible, setVisible] = useState(visible)\n\n    const _delay = typeof delay === 'number' ? { show: delay, hide: delay } : delay\n\n    const popperConfig = {\n      modifiers: [\n        {\n          name: 'arrow',\n          options: {\n            element: '.tooltip-arrow',\n          },\n        },\n        {\n          name: 'flip',\n          options: {\n            fallbackPlacements: fallbackPlacements,\n          },\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: offset,\n          },\n        },\n      ],\n      placement: getRTLPlacement(placement, togglerRef.current),\n    }\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      if (_visible) {\n        setMounted(true)\n\n        if (tooltipRef.current) {\n          tooltipRef.current.classList.remove('fade', 'show')\n          destroyPopper()\n        }\n\n        setTimeout(() => {\n          if (togglerRef.current && tooltipRef.current) {\n            if (animation) {\n              tooltipRef.current.classList.add('fade')\n            }\n\n            initPopper(togglerRef.current, tooltipRef.current, popperConfig)\n            tooltipRef.current.style.removeProperty('display')\n            tooltipRef.current.classList.add('show')\n            onShow && onShow()\n          }\n        }, _delay.show)\n      }\n\n      return () => {\n        if (tooltipRef.current) {\n          tooltipRef.current.classList.remove('show')\n          onHide && onHide()\n          executeAfterTransition(() => {\n            if (tooltipRef.current) {\n              tooltipRef.current.style.display = 'none'\n            }\n\n            destroyPopper()\n            setMounted(false)\n          }, tooltipRef.current)\n        }\n      }\n    }, [_visible])\n\n    useEffect(() => {\n      updatePopper()\n    }, [content])\n\n    return (\n      <>\n        {React.cloneElement(children as React.ReactElement<any>, {\n          ...(_visible && {\n            'aria-describedby': uID.current,\n          }),\n          ref: togglerRef,\n          ...((trigger === 'click' || trigger.includes('click')) && {\n            onClick: () => setVisible(!_visible),\n          }),\n          ...((trigger === 'focus' || trigger.includes('focus')) && {\n            onFocus: () => setVisible(true),\n            onBlur: () => setVisible(false),\n          }),\n          ...((trigger === 'hover' || trigger.includes('hover')) && {\n            onMouseEnter: () => setVisible(true),\n            onMouseLeave: () => setVisible(false),\n          }),\n        })}\n        <CConditionalPortal container={container} portal={true}>\n          {mounted && (\n            <div\n              className={classNames('tooltip', 'bs-tooltip-auto', className)}\n              id={uID.current}\n              ref={forkedRef}\n              role=\"tooltip\"\n              style={{\n                display: 'none',\n              }}\n              {...rest}\n            >\n              <div className=\"tooltip-arrow\"></div>\n              <div className=\"tooltip-inner\">{content}</div>\n            </div>\n          )}\n        </CConditionalPortal>\n      </>\n    )\n  },\n)\n\nCTooltip.propTypes = {\n  animation: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.any,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  delay: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      show: PropTypes.number.isRequired,\n      hide: PropTypes.number.isRequired,\n    }),\n  ]),\n  fallbackPlacements: fallbackPlacementsPropType,\n  offset: PropTypes.any, // TODO: find good proptype\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  placement: PropTypes.oneOf(['auto', 'top', 'right', 'bottom', 'left']),\n  trigger: triggerPropType,\n  visible: PropTypes.bool,\n}\n\nCTooltip.displayName = 'CTooltip'\n","import getTransitionDurationFromElement from './getTransitionDurationFromElement'\n\nconst execute = (callback: () => void) => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst triggerTransitionEnd = (element: HTMLElement) => {\n  element.dispatchEvent(new Event('transitionend'))\n}\n\nconst executeAfterTransition = (\n  callback: () => void,\n  transitionElement: HTMLElement,\n  waitForTransition = true,\n) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }: { target: any }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener('transitionend', handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener('transitionend', handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\nexport default executeAfterTransition\n","import { Placement } from '@popperjs/core'\nimport isRTL from './isRTL'\n\nconst getRTLPlacement = (placement: string, element: HTMLDivElement | null): Placement => {\n  switch (placement) {\n    case 'right': {\n      return isRTL(element) ? 'left' : 'right'\n    }\n    case 'left': {\n      return isRTL(element) ? 'right' : 'left'\n    }\n    default: {\n      return placement as Placement\n    }\n  }\n}\n\nexport default getRTLPlacement\n","const getTransitionDurationFromElement = (element: HTMLElement) => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * 1000\n}\n\nexport default getTransitionDurationFromElement\n"],"names":["Tooltips","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","CCardBody","DocsExample","href","CTooltip","content","CLink","placement","CButton","color","forwardRef","_a","ref","_b","as","Component","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","animation","container","_c","delay","_d","fallbackPlacements","_e","offset","onHide","onShow","_f","_g","trigger","visible","tooltipRef","useRef","togglerRef","forkedRef","useForkedRef","uID","concat","Math","floor","random","_h","usePopper","initPopper","destroyPopper","updatePopper","_j","useState","mounted","setMounted","_k","_visible","setVisible","_delay","show","hide","popperConfig","modifiers","name","options","element","getRTLPlacement","current","useEffect","classList","remove","setTimeout","add","style","removeProperty","executeAfterTransition","display","includes","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","CConditionalPortal","portal","id","role","isRequired","fallbackPlacementsPropType","triggerPropType","execute","callback","transitionElement","waitForTransition","emulatedDuration","getTransitionDurationFromElement","called","handler","target","removeEventListener","addEventListener","dispatchEvent","Event","isRTL","window","getComputedStyle","transitionDuration","transitionDelay","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split"],"sourceRoot":""}