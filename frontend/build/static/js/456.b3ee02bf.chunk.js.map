{"version":3,"file":"static/js/456.b3ee02bf.chunk.js","mappings":"+iBAsBA,MAAMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACxD,CAAC,KAADE,OAAMC,EAAAA,EAAiBC,OAAS,CAC9BC,gBAAiBJ,EAAMK,QAAQC,OAAOC,MACtCC,MAAOR,EAAMK,QAAQC,OAAOG,OAE9B,CAAC,KAADR,OAAMC,EAAAA,EAAiBQ,OAAS,CAC9BC,SAAU,IAEb,IAEKC,GAAiBf,EAAAA,EAAAA,IAAOgB,EAAAA,EAAPhB,EAAiBiB,IAAA,IAAC,MAAEd,GAAOc,EAAA,MAAM,CACtD,qBAAsB,CACpBV,gBAAiBJ,EAAMK,QAAQU,OAAOC,OAExC,mCAAoC,CAClCC,OAAQ,GAEX,IAEKC,EAAaC,EAAAA,YAAiB,SAAoBC,EAAOC,GAC7D,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAU,KAAKH,IAAKA,KAASD,GAC7C,IAsBA,MAi6BA,EAj6BkBK,KAChB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,OAC1BG,EAAYC,IAAiBJ,EAAAA,EAAAA,WAAS,IACtCK,EAAgBC,IAAqBN,EAAAA,EAAAA,WAAS,IAC9CO,EAAgBC,IAAuBR,EAAAA,EAAAA,WAAS,IAChDS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,CACvCW,KAAM,GACNC,MAAO,GACPC,YAAa,GACbC,iBAAkB,GAClBC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,aAAc,GACdC,aAAc,GACdC,KAAM,GACNC,QAAS,GACTC,MAAO,MAGFC,EAAMC,IAAUzB,EAAAA,EAAAA,UAAS,KACzB0B,EAAOC,IAAW3B,EAAAA,EAAAA,UAAS,KAC3B4B,GAAaC,KAAiB7B,EAAAA,EAAAA,UAAS,KACvC8B,GAAkBC,KAAiB/B,EAAAA,EAAAA,UAAS,KAC5CgC,GAAcC,KAAkBjC,EAAAA,EAAAA,UAAS,KACzCkC,GAAWC,KAAenC,EAAAA,EAAAA,UAAS,KACnCoC,GAAcC,KAAkBrC,EAAAA,EAAAA,UAAS,KACzCsC,GAAcC,KAAkBvC,EAAAA,EAAAA,UAAS,KACzCwC,GAAMC,KAAUzC,EAAAA,EAAAA,UAAS,KACzB0C,GAASC,KAAa3C,EAAAA,EAAAA,UAAS,KAC/B4C,GAAOC,KAAW7C,EAAAA,EAAAA,UAAS,KAC3B8C,GAAQC,KAAkB/C,EAAAA,EAAAA,UAAS,KACnCgD,GAAWC,KAAejD,EAAAA,EAAAA,UAAS,KACnCkD,GAAKC,KAAWnD,EAAAA,EAAAA,UAAS,KACzBoD,GAAMC,KAAYrD,EAAAA,EAAAA,UAAS,KAC3BsD,GAAKC,KAAWvD,EAAAA,EAAAA,UAAS,KAC1BpB,GAAM4E,KAAYxD,EAAAA,EAAAA,UAAS,KAC3ByD,GAASC,KAAc1D,EAAAA,EAAAA,UAAS,KAC/B2D,GAAKC,KAAU5D,EAAAA,EAAAA,UAAS,IAEjC6D,QAAQC,IAAIV,GAAM,SAElB,MAAOW,GAAQC,KAAahE,EAAAA,EAAAA,UAAS,KAC5BiE,GAAaC,KAAkBlE,EAAAA,EAAAA,UAAS,KACzCmE,GAAOC,KAAapE,EAAAA,EAAAA,UAAS,KAC7BqE,GAASC,KAAetE,EAAAA,EAAAA,UAAS,KAChCuE,GAAaC,KAAkBxE,EAAAA,EAAAA,WAAS,IAIxCyE,GAASC,KAAc1E,EAAAA,EAAAA,WAAS,IAChC2E,GAAKC,KAAU5E,EAAAA,EAAAA,UAAS,KACxB6E,GAAUC,KAAe9E,EAAAA,EAAAA,UAAS,OAClC+E,GAAgBC,KAAqBhF,EAAAA,EAAAA,UAAS,MAE/CiF,IAAWC,EAAAA,EAAAA,IAAY,KAE7BC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,EAAAA,EAAQC,IAAI,SAE1B,GAAKF,EAKL,IACE,MAAMG,GAAeC,EAAAA,EAAAA,GAAUJ,GACzBK,EAAcC,KAAKC,MAAQ,IAG7BJ,EAAaK,IAAMH,IACrBJ,EAAAA,EAAQQ,OAAO,SACfZ,GAAS,KAEb,CAAE,MAAOa,GACPjC,QAAQiC,MAAM,iBAAkBA,GAChCT,EAAAA,EAAQQ,OAAO,SACfZ,GAAS,IACX,MAjBEA,GAAS,IAiBX,GACC,CAACA,MAGJE,EAAAA,EAAAA,YAAU,KACRY,KACAC,IAAe,GACd,IAEH,MAAMD,GAAgBE,UACpB,IACE,MAAMC,QAAiBC,MAAM,oBACvBC,QAAeF,EAASG,OAC9BtG,EAAQqG,EAAOtG,MAAQ,GACzB,CAAE,MAAOgG,GACPjC,QAAQiC,MAAM,4BAA6BA,EAC7C,GAGIQ,GAAgBL,UACpB,IACE,MAAMC,QAAiBC,MAAM,qBAAD9H,OAAsBkI,IAC5CH,QAAeF,EAASG,OAC9BnG,EAAQkG,EAAOtG,MAGfY,EAAY,CACVC,KAAMyF,EAAOtG,KAAK0G,UAAY,GAC9B5F,MAAOwF,EAAOtG,KAAKc,OAAS,GAC5BC,YAAauF,EAAOtG,KAAKe,aAAe,GACxCC,iBAAkBsF,EAAOtG,KAAKgB,kBAAoB,GAClDC,UAAWqF,EAAOtG,KAAKiB,WAAa,GACpCC,aAAcoF,EAAOtG,KAAKkB,cAAgB,GAC1CC,UAAWmF,EAAOtG,KAAKmB,WAAa,GACpCE,aAAciF,EAAOtG,KAAK2G,cAAgB,GAC1CrF,aAAcgF,EAAOtG,KAAK4G,cAAgB,GAC1CrF,KAAM+E,EAAOtG,KAAKuB,MAAQ,GAC1BC,QAAS8E,EAAOtG,KAAKwB,SAAW,GAChCC,MAAO6E,EAAOtG,KAAKyB,OAAS,KAI9BoF,GAAWP,EAAOtG,KAAK8G,YAAa,GACpCvD,GAAS+C,EAAOtG,KAAKoB,YACrBoD,GAAY8B,EAAOtG,KAAK+G,SAE1B,CAAE,MAAOf,GACPjC,QAAQiC,MAAM,6BAA8BA,EAC9C,GAyIDjC,QAAQC,IAAIH,GAAK,aAEjB,MAAMqC,GAAeA,KACpB,IAMEG,MAAM,kBALiB,CACrBW,OAAQ,MACRC,SAAU,WAIXC,MAAKf,SACoB,MAApBC,EAASe,QAAsC,MAApBf,EAASe,OAC7B,CAAEC,YAAahB,EAASe,OAAQnH,WAAYoG,EAASG,QAErD,CAAEa,YAAahB,EAASe,OAAQnH,KAAM,CAAE6E,IAAK,uBAG3DqC,MAAMZ,IACLxC,GAAQwC,EAAOtG,KAAKA,MACd+D,QAAQC,IAAIsC,EAAOtG,KAAKA,KAAK,eAAe,IAEnDqH,OAAOrB,IAAW,IAADsB,EAAAC,EACdxD,QAAQiC,MAAMA,GACdpB,IAAW,GACXlB,GAAS,SACToB,IAAqB,QAAdwC,EAAAtB,EAAMI,gBAAQ,IAAAkB,GAAM,QAANC,EAAdD,EAAgBtH,YAAI,IAAAuH,OAAN,EAAdA,EAAsBC,UAAW,oBAAoB,GAEhE,CAAC,MAAMxB,GAAO,IAADyB,EAAAC,EACX3D,QAAQiC,MAAMA,GACdpB,IAAW,GACXlB,GAAS,SACToB,IAAqB,QAAd2C,EAAAzB,EAAMI,gBAAQ,IAAAqB,GAAM,QAANC,EAAdD,EAAgBzH,YAAI,IAAA0H,OAAN,EAAdA,EAAsBF,UAAW,oBAC1C,IAyDKG,GAAOC,KAAW1H,EAAAA,EAAAA,UAAS,IAO5B2H,GAAoBA,KACxBD,IAAU,EAAM,GAGXE,GAASjB,IAAcpH,EAAAA,SAAe,KACtCsI,GAASC,IAAcvI,EAAAA,SAAe,IAC7CsE,QAAQC,IAAI8D,GAAQ,WAEpB,MAAMG,GAAgBC,IACpBrB,GAAWqB,EAAMC,OAAOL,SACxBE,GAAWE,EAAMC,OAAOL,QAAQ,EAS5BM,GAAkBA,KACtBpD,GAAY,MACZE,GAAkB,KAAK,EAanBmD,GAAoBA,KACxB3H,GAAoB,EAAM,EAQtB4H,GAAqBA,KACzB5D,IAAe,EAAM,EAgBjB6D,GAAeA,KAnPEpC,WACrB,IACE,MAAMqC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBAMjC,MAAMC,EAAMC,KAAKC,UAAU,CACzB,SAAYnH,EAClB,MAASE,EACT,YAAeE,GACf,SAAY6B,GACZ,KAAQ,cACR,iBAAoB3B,GACpB,WAAcoB,GACd,UAAahB,GACb,aAAgBE,GAChB,aAAeE,GACf,UAAYuF,GAEZ,KAAQrF,GACR,QAAWE,GACX,MAASE,GACT,aAAgBE,GAChB,UAAaE,KAWTmD,MAAM,gBAPiB,CACrBW,OAAQ,OACR8B,QAASN,EACTxJ,KAAM2J,EACN1B,SAAU,WAIXC,MAAKf,SACoB,MAApBC,EAASe,QAAsC,MAApBf,EAASe,OAC7B,CAAEC,YAAahB,EAASe,OAAQnH,WAAYoG,EAASG,QAErD,CAAEa,YAAahB,EAASe,OAAQnH,KAAM,CAAE6E,IAAK,uBAG3DqC,MAAMZ,IACwB,MAAvBA,EAAOc,aACPrD,QAAQC,IAAIsC,EAAOtG,KAAKsF,OAKxBW,KACArB,IAAW,GACXlB,GAAS,WACToB,GAAOwB,EAAOtG,KAAK6E,KAAO,qBAOI,MAAvByB,EAAOc,aAChBxC,IAAW,GACTlB,GAAS,SACToB,GAAOwB,EAAOtG,KAAK6E,MAEW,MAAvByB,EAAOc,cAChBxC,IAAW,GACTlB,GAAS,SACToB,GAAO,uBACX,IAEHuC,OAAOrB,IAAW,IAAD+C,EAAAC,EACdjF,QAAQiC,MAAMA,GACdpB,IAAW,GACXlB,GAAS,SACToB,IAAqB,QAAdiE,EAAA/C,EAAMI,gBAAQ,IAAA2C,GAAM,QAANC,EAAdD,EAAgB/I,YAAI,IAAAgJ,OAAN,EAAdA,EAAsBxB,UAAW,oBAAoB,GAEhE,CAAC,MAAMxB,GAAO,IAADiD,EAAAC,EACXnF,QAAQiC,MAAMA,GACdpB,IAAW,GACXlB,GAAS,SACToB,IAAqB,QAAdmE,EAAAjD,EAAMI,gBAAQ,IAAA6C,GAAM,QAANC,EAAdD,EAAgBjJ,YAAI,IAAAkJ,OAAN,EAAdA,EAAsB1B,UAAW,oBAC1C,GAgKA2B,GACAtB,IAAmB,GAIPuB,EAAAA,EAAAA,KAgBd,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACC3J,EAAAA,EAAAA,KAAC4J,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,CAAEC,SAAU,GAAIJ,UACjC3J,EAAAA,EAAAA,KAACgK,EAAAA,EAAM,CAACC,MAAO,CAACnL,gBAAgB,UAAUI,MAAM,QAAUgL,SAAS,SAAQP,UACzEF,EAAAA,EAAAA,MAACU,EAAAA,EAAO,CAAEC,QAAQ,QAAOT,SAAA,EACvBF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,WAAS,EAACpK,UAAU,MAAMqK,eAAe,gBAAgBC,WAAW,SAAQb,SAAA,EAChFF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGJ,WAAS,EAACpK,UAAU,MAAMsK,WAAW,SAAQb,SAAA,EAC7D3J,EAAAA,EAAAA,KAAC2K,EAAAA,EAAU,CAACC,KAAK,QAAQ1L,MAAM,UAAU,aAAW,OAAO4K,GAAI,CAAEe,GAAI,IAAMlB,UACzE3J,EAAAA,EAAAA,KAAC8K,EAAAA,EAAY,OAEf9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAU,CAACX,QAAQ,KAAKlL,MAAM,UAAU8L,UAAU,MAAKrB,SAAC,yBAI3D3J,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGJ,WAAS,EAACpK,UAAU,MAAMqK,eAAe,WAAWC,WAAW,SAAQb,UACvFF,EAAAA,EAAAA,MAACwB,EAAAA,EAAM,CAACC,QAtGQC,KACxBnD,IAAU,EAAK,EAqG4B9I,MAAM,UAASyK,SAAA,CAAC,KAAC3J,EAAAA,EAAAA,KAACoL,EAAAA,EAAa,CAACtB,GAAI,CAAEe,GAAI,MAAQ,4BAGzFpB,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CAACzH,KAAMmE,GAAQuD,QAASrD,GAAmB,kBAAgB,0BAAyB0B,SAAA,EACnF3J,EAAAA,EAAAA,KAACuL,EAAAA,EAAW,CAACC,GAAG,0BAAyB7B,SAAE,wBAC3CF,EAAAA,EAAAA,MAACgC,EAAAA,EAAa,CAAA9B,SAAA,EACZF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACqB,GAAI,EAAGpB,WAAS,EAACqB,QAAS,EAAEhC,SAAA,EAChC3J,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,OACN1B,QAAQ,WACR2B,MAAOjK,EACPkK,SAAWC,GAAMlK,EAASkK,EAAE1D,OAAOwD,YAGvC/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,WACN1B,QAAQ,WACR2B,MAAOhI,GACPiI,SAAWC,GAAMjI,GAAaiI,EAAE1D,OAAOwD,YAG3C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,QACN1B,QAAQ,WACR2B,MAAO/J,EACPgK,SAAWC,GAAMhK,EAAUgK,EAAE1D,OAAOwD,YAiCxC/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,aACN1B,QAAQ,WACR2B,MAAOvI,GACPwI,SAAWC,GAAMxI,GAAQwI,EAAE1D,OAAOwD,YAItC/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,eACN1B,QAAQ,WACR2B,MAAO7J,GACP8J,SAAWC,GAAM9J,GAAgB8J,EAAE1D,OAAOwD,YAG9C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,qBACN1B,QAAQ,WACR2B,MAAO3J,GACP4J,SAAWC,GAAM5J,GAAgB4J,EAAE1D,OAAOwD,YAG9C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,gBACN1B,QAAQ,WACR2B,MAAO3I,GACP4I,SAAWC,GAAM5I,GAAiB4I,EAAE1D,OAAOwD,YAG/C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,aACN1B,QAAQ,WACR2B,MAAOzI,GACP0I,SAAWC,GAAM1I,GAAc0I,EAAE1D,OAAOwD,YAG5C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,aACN1B,QAAQ,WACR2B,MAAOvJ,GACPwJ,SAAWC,GAAMxJ,GAAcwJ,EAAE1D,OAAOwD,YAG5C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,iBACN1B,QAAQ,WACR2B,MAAOrJ,GACPsJ,SAAWC,GAAMtJ,GAAiBsJ,EAAE1D,OAAOwD,YAG/C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,iBACN1B,QAAQ,WACR2B,MAAOnJ,GACPoJ,SAAWC,GAAMpJ,GAAiBoJ,EAAE1D,OAAOwD,YAG/C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,OACN1B,QAAQ,WACR2B,MAAOjJ,GACPkJ,SAAWC,GAAMlJ,GAASkJ,EAAE1D,OAAOwD,YAGvC/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,UACN1B,QAAQ,WACR2B,MAAO/I,GACPgJ,SAAWC,GAAMhJ,GAAYgJ,EAAE1D,OAAOwD,YAG1C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,QACN1B,QAAQ,WACR2B,MAAO7I,GACP8I,SAAWC,GAAM9I,GAAU8I,EAAE1D,OAAOwD,eAI1C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACqB,GAAI,EAAGjB,MAAI,EAACC,GAAI,GAAGf,UACnC3J,EAAAA,EAAAA,KAACkM,EAAAA,EAAgB,CACfC,SACEnM,EAAAA,EAAAA,KAACoM,EAAAA,EAAM,CACLlE,QAASC,GACT6D,SAAU3D,GACVgE,WAAY,CAAE,aAAc,oBAGhCP,MAAM,oBAGErC,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACqB,GAAI,EAAGpB,WAAS,EAACpK,UAAU,MAAMqK,eAAe,gBAAgBC,WAAW,SAASV,GAAI,CAACwC,QAAQ,GAAG3C,SAAA,EAC1G3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACb,QAAQ,YAAYN,GAAI,CAAEhL,gBAAiB,UAAWI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,YAAeoM,QAASjD,GAAkB0B,SAAC,YAGpJ3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACb,QAAQ,YAAYN,GAAI,CAAEhL,gBAAiB,QAASI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,UAAYoM,QAASA,IACxHpJ,EAMAiC,GAKqB,IAApBA,GAASwI,QACZvH,IAAW,GACXlB,GAAS,cACToB,GAAO,6BAGLlD,EAMCE,GAMuB,KAAxBA,GAAaqK,QACfvH,IAAW,GACXlB,GAAS,cACToB,GAAO,mCAGJ9C,GAM4B,KAA7BA,GAAkBmK,QACpBvH,IAAW,GACXlB,GAAS,cACToB,GAAO,6CAGJ5B,GAMqB,KAAtBA,GAAWiJ,QACbvH,IAAW,GACXlB,GAAS,cACToB,GAAO,iCAGJ1C,GAMqB,KAAtBA,GAAW+J,QACbvH,IAAW,GACXlB,GAAS,cACToB,GAAO,iCAGJxC,GAMAE,GAMAE,GAMAI,GAMAF,QAOH2F,MANA3D,IAAW,GACXlB,GAAS,cACToB,GAAO,sBARPF,IAAW,GACXlB,GAAS,cACToB,GAAO,oBARPF,IAAW,GACXlB,GAAS,cACToB,GAAO,mBARPF,IAAW,GACXlB,GAAS,cACToB,GAAO,6BARPF,IAAW,GACXlB,GAAS,cACToB,GAAO,6BAdPF,IAAW,GACXlB,GAAS,cACToB,GAAO,yBAdPF,IAAW,GACXlB,GAAS,cACToB,GAAO,yBAdPF,IAAW,GACXlB,GAAS,cACToB,GAAO,qCAdPF,IAAW,GACXlB,GAAS,cACToB,GAAO,2BARPF,IAAW,GACXlB,GAAS,cACToB,GAAQ,oBAbRF,IAAW,GACXlB,GAAS,cACToB,GAAQ,uBARRF,IAAW,GACXlB,GAAS,cACToB,GAAQ,kBAoGRyE,SAAC,0BAQf3J,EAAAA,EAAAA,KAACwM,EAAAA,EAAc,CAAC1C,GAAI,CAAC2C,aAAa,QAASzB,UAAW0B,EAAAA,EAAM/C,UAC1DF,EAAAA,EAAAA,MAACkD,EAAAA,EAAK,CAAC7C,GAAI,CAAE8C,SAAU,KAAO,aAAW,mBAAkBjD,SAAA,EACzD3J,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAAlD,UACRF,EAAAA,EAAAA,MAAClK,EAAAA,EAAQ,CAAAoK,SAAA,EACP3J,EAAAA,EAAAA,KAAC1B,EAAe,CAAAqL,SAAC,eACjB3J,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAC,kBAChC3J,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAC,UAChC3J,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAC,UAChC3J,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAC,gBAChC3J,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAC,aAChC3J,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAC,eAGpC3J,EAAAA,EAAAA,KAAC+M,EAAAA,EAAS,CAAApD,SACPvJ,EAAKmM,OAAS,EACbnM,EAAK4M,KAAI,CAACvC,EAAMwC,IAAwB,gBAAdxC,EAAKyC,OAC7BzD,EAAAA,EAAAA,MAACnK,EAAc,CAAAqK,SAAA,EACb3J,EAAAA,EAAAA,KAAC1B,EAAe,CAAAqL,SAAEc,EAAK3D,YACvB9G,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAEc,EAAKtJ,eACtCnB,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAEc,EAAKvJ,SACtClB,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAEc,EAAK9I,QACtC3B,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,SAAEc,EAAKjJ,cAEtCxB,EAAAA,EAAAA,KAAC1B,EAAe,CAACwO,MAAM,SAAQnD,UAC7B3J,EAAAA,EAAAA,KAAC2K,EAAAA,EAAU,CAACO,QAASA,KAAQxK,GAAc,GAAOkG,GAAc6D,EAAK0C,IAAI,EAAIxD,UAC3E3J,EAAAA,EAAAA,KAACoN,EAAAA,EAAQ,SAGb3D,EAAAA,EAAAA,MAACnL,EAAe,CAACwO,MAAM,SAAQnD,SAAA,EAC7B3J,EAAAA,EAAAA,KAAC2K,EAAAA,EAAU,CAACO,QAAUe,IAAMoB,OArZtB/E,EAqZqC2D,EArZ9BpF,EAqZiC4D,EAAK0C,IApZnE/H,GAAYkD,EAAMgF,oBAClBhI,GAAkBuB,GAFGwG,IAAC/E,EAAOzB,CAqZ2C,EAAA8C,UACtD3J,EAAAA,EAAAA,KAACuN,EAAAA,EAAQ,OAEX9D,EAAAA,EAAAA,MAAC+D,EAAAA,EAAI,CACHrI,SAAUA,GACVvB,KAAM6J,QAAQtI,KAAaE,KAAmBoF,EAAK0C,IACnD7B,QAAS9C,GAAgBmB,SAAA,EAEzB3J,EAAAA,EAAAA,KAAC0N,EAAAA,EAAQ,CAACxC,QAASA,KAAMyC,OAnZpB9G,EAmZoC4D,EAAK0C,IAlZhEvM,GAAkB,QAClBgG,GAAcC,GAFSA,KAmZ8C,EAAA8C,SAAC,UACpD3J,EAAAA,EAAAA,KAAC0N,EAAAA,EAAQ,CAACxC,QAASA,KAAM0C,OA/YnB/G,EA+YoC4D,EAAK0C,IA9YjErM,GAAoB,QACpB8F,GAAcC,GAFUA,KA+Y8C,EAAA8C,SAAC,YACrD3J,EAAAA,EAAAA,KAAC0N,EAAAA,EAAQ,CAACxC,QAASA,KAAM2C,OAvYlBhH,EAuYoC4D,EAAK0C,IAtYlErI,IAAe,QACf8B,GAAcC,GAFWA,KAuY8C,EAAA8C,SAAC,oBAvBvCsD,MA6BvBjN,EAAAA,EAAAA,KAAC+K,EAAAA,EAAU,CAAApB,SAAC,8BAMpBF,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CAACzH,KAAMnD,EAAY6K,QAASA,IAAM5K,GAAc,GAAQoN,oBAAqBlO,EAAW+J,SAAA,EAC7F3J,EAAAA,EAAAA,KAACuL,EAAAA,EAAW,CAAA5B,SAAC,kBACb3J,EAAAA,EAAAA,KAACyL,EAAAA,EAAa,CAAC3B,GAAI,CAAEiE,MAAO,SAAUpE,SACnCpJ,IACCP,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACC,WAAS,EAACqB,QAAS,EAAEhC,UACzBF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAEf,SAAA,EACfF,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,SAAOpJ,EAAKuG,aACxB2C,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,UAAQpJ,EAAKY,gBACzBsI,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,UAAQpJ,EAAKW,UACzBuI,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,YAAUpJ,EAAKwG,aAAa,KAAGxG,EAAKyG,iBAChDyC,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,SAAOpJ,EAAKoB,SACxB8H,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,YAAUpJ,EAAKqB,YAC3B6H,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,kBAAgBpJ,EAAKe,iBACjCmI,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,eAAapJ,EAAKgB,cAC9BkI,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAAApB,SAAA,CAAC,eAAapJ,EAAKiB,sBAKtCxB,EAAAA,EAAAA,KAACgO,EAAAA,EAAa,CAAArE,UACZ3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACC,QAASA,IAAMxK,GAAc,GAAOiJ,SAAC,gBAIjDF,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CAACzH,KAAMjD,EAAgB2K,QAASA,IAAM1K,GAAkB,GAAQkN,oBAAqBlO,EAAW+J,SAAA,EAC3G3J,EAAAA,EAAAA,KAACuL,EAAAA,EAAW,CAAA5B,SAAC,yBACb3J,EAAAA,EAAAA,KAACyL,EAAAA,EAAa,CAAA9B,UACZF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,WAAS,EAAAX,SAAA,CACZsE,OAAOC,KAAKnN,GAAUiM,KAAImB,IACzBnO,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACRE,MAAOqC,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAC/CzC,WAAS,EACT0C,OAAO,SACPtN,KAAMkN,EACNpC,MAAOhL,EAASoN,GAChBnC,SAAWC,GAAMjL,EAAY,IAAKD,EAAU,CAACkL,EAAE1D,OAAOtH,MAAOgL,EAAE1D,OAAOwD,WAPlDoC,MAW1BnO,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAClB3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACJE,MAAM,aACND,WAAS,EACT0C,OAAO,SAEPxC,MAAOvI,GACPwI,SAAWC,GAAMtI,GAAUsI,EAAE1D,OAAOwD,YAG1C/L,EAAAA,EAAAA,KAACqK,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGf,UAChB3J,EAAAA,EAAAA,KAACkM,EAAAA,EAAgB,CACfC,SACEnM,EAAAA,EAAAA,KAACoM,EAAAA,EAAM,CACLlE,QAASA,GACT8D,SAAU3D,GACVgE,WAAY,CAAE,aAAc,oBAGhCP,MAAM,oBAGVrC,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACqB,GAAI,EAAG5B,GAAI,CAACwC,QAAQ,GAAIhC,WAAS,EAACpK,UAAU,MAAMqK,eAAe,gBAAgBC,WAAW,SAAQb,SAAA,EAC1G3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAAEnB,GAAI,CAAEhL,gBAAiB,UAAWI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,YAAcoM,QAASA,IAAMtK,GAAkB,GAAO+I,SAAC,YAC/I3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAAEnB,GAAI,CAAEhL,gBAAiB,QAASI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,UAAYoM,QAASA,KA9tBxF3E,WACjB,IACE,MAAMC,QAAiBC,MAAM,uBAAD9H,OAAwBkI,GAAU,CAC5DO,OAAQ,MACR8B,QAAS,CAAE,eAAgB,oBAC3B9J,KAAM4J,KAAKC,UAAU,IAChBlI,EACHmG,UAAWgB,GACX1G,WAAYkC,OAGVgD,QAAeF,EAASG,OAC9BxC,QAAQC,IAAIsC,EAAO,QACnBxB,GAAOwB,EAAOkB,SAAW,qBACzB5C,IAAW,GACXlB,GAAS,WACTlD,GAAkB,GAClB4H,KACAnC,IACF,CAAE,MAAOD,GACPjC,QAAQiC,MAAM,uBAAwBA,GACtClB,GAAO,uBACPF,IAAW,EACb,GAusBiHwJ,CAAWjO,EAAK4M,IAAI,EAAIxD,SAAC,qBAMxIF,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CAACzH,KAAM/C,EAAgByK,QAAS7C,GAAmBqF,oBAAqBlO,EAAW+J,SAAA,EACxF3J,EAAAA,EAAAA,KAACuL,EAAAA,EAAW,CAAA5B,SAAC,sBACb3J,EAAAA,EAAAA,KAACyL,EAAAA,EAAa,CAAA9B,UACZ3J,EAAAA,EAAAA,KAACyO,EAAAA,EAAiB,CAAA9E,SAAC,kDAIrB3J,EAAAA,EAAAA,KAACgO,EAAAA,EAAa,CAAArE,UACZF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,WAAS,EAACpK,UAAU,MAAMqK,eAAe,gBAAgBC,WAAW,SAAQb,SAAA,EAClF3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACnB,GAAI,CAAEhL,gBAAiB,UAAWI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,YAAcoM,QAASzC,GAAkBkB,SAAC,aAC/H3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACnB,GAAI,CAAEhL,gBAAiB,QAASI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,UAAYoM,QA1dlFwD,KACfnO,IA1PagG,WACjB,IACE,MAAMC,QAAiBC,MAAM,sBAAD9H,OAAuBkI,GAAU,CAC3DO,OAAQ,WAEJV,QAAeF,EAASG,OAC9BzB,GAAOwB,EAAOkB,SAAW,qBACzB5C,IAAW,GACXlB,GAAS,WACThD,GAAoB,GACpBuF,IACF,CAAE,MAAOD,GACPjC,QAAQiC,MAAM,uBAAwBA,GACtClB,GAAO,uBACPpB,GAAS,SACTkB,IAAW,EACb,GA2OE2J,CAAWpO,EAAK4M,KAChB1E,KACF,EAsd2HkB,SAAC,oBAI1H3J,EAAAA,EAAAA,KAACqL,EAAAA,EAAM,CACLzH,KAAMiB,GACNyG,QAAS5C,GACT,kBAAgB,0BAAyBiB,UAEzCF,EAAAA,EAAAA,MAACgC,EAAAA,EAAa,CAAC3B,GAAI,CAACiE,MAAM,SAASpE,SAAA,EAE/B3J,EAAAA,EAAAA,KAAC+K,EAAAA,EAAU,CAAC6D,UAAU,OAAO9E,GAAI,CAACzK,SAAS,OAAO0O,MAAM,QAAQpE,SAAC,kBAClEF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACK,GAAI,GAAIJ,WAAS,EAACpK,UAAU,SAASqK,eAAe,SAASC,WAAW,SAAQb,SAAA,EACrF3J,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACVE,MAAM,SACN8C,UAAU,OACV5C,SAAWC,GAAI3H,GAAU2H,EAAE1D,OAAOwD,UAGlC/L,EAAAA,EAAAA,KAAC4L,EAAAA,EAAS,CACVE,MAAM,UACN8C,UAAU,OACV5C,SAAWC,GAAIzH,GAAeyH,EAAE1D,OAAOwD,aAGxCtC,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACqB,GAAI,EAAGpB,WAAS,EAACpK,UAAU,MAAMqK,eAAe,gBAAeC,WAAW,SAAQb,SAAA,EACzF3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACb,QAAQ,YAAYN,GAAI,CAAEzK,SAAS,OAAQP,gBAAiB,UAAWI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,YAAeoM,QAASxC,GAAmBiB,SAAC,YAGtK3J,EAAAA,EAAAA,KAACiL,EAAAA,EAAM,CAACb,QAAQ,YAAYN,GAAI,CAAEzK,SAAS,OAAQP,gBAAiB,QAASI,MAAO,OAAO,UAAW,CAACJ,gBAAiB,UAAYoM,QAhftH2D,KAnHDC,MACnB,IACE,MAAMlG,EAAY,IAAIC,QAC5BD,EAAUE,OAAO,eAAgB,oBAEjC,MAAMC,EAAMC,KAAKC,UAAU,CACzB,MAAQtE,GACR,MAASN,GACT,KAAQE,GACR,OAAUE,KAUZgC,MAAM,0BAPiB,CACrBW,OAAQ,OACR8B,QAASN,EACTxJ,KAAM2J,EACN1B,SAAU,WAIXC,MAAKf,SACoB,MAApBC,EAASe,QAAsC,MAApBf,EAASe,OAC7B,CAAEC,YAAahB,EAASe,OAAQnH,WAAYoG,EAASG,QAErD,CAAEa,YAAahB,EAASe,OAAQnH,KAAM,CAAE6E,IAAK,uBAGzDqC,MAAMZ,IACsB,MAAvBA,EAAOc,aACPrD,QAAQC,IAAIsC,EAAOtG,KAAM,gBAEzB4E,IAAW,GACXlB,GAAS,WAEToB,GAAO,mBAEuB,MAAvBwB,EAAOc,cAChBxC,IAAW,GACTlB,GAAS,SACToB,GAAO,yBACX,IAEDuC,OAAOrB,IAAW,IAAD2I,EAAAC,EAChB7K,QAAQiC,MAAMA,GACdpB,IAAW,GACXlB,GAAS,SACToB,GAAqB,QAAf6J,EAAC3I,EAAMI,gBAAQ,IAAAuI,GAAM,QAANC,EAAdD,EAAgB3O,YAAI,IAAA4O,OAAN,EAAdA,EAAsBpH,QAAS,GAGpC,CAAC,MAAMxB,GACLjC,QAAQiC,MAAMA,EAChB,GAiEA0I,GACApG,KACAF,IAAiB,EA6eiJyG,GAAC,EAAAtF,SAAC,kBASlK3J,EAAAA,EAAAA,KAACkP,EAAAA,EAAQ,CAACtL,KAAMmB,GAASoK,iBAAkB,IAAM7D,QAASA,IAAMtG,IAAW,GAAO2E,UAChF3J,EAAAA,EAAAA,KAACoP,EAAAA,EAAK,CAAC9D,QAASA,IAAMtG,IAAW,GAAQqK,SAAUnQ,GAAO4K,GAAI,CAAEiE,MAAO,QAASpE,SAC7E1E,SAGJ,C,sBC39BHqK,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,sGACD,Y,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,SAAS,EAAc,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,mBACF,MAAmB,EAAIH,EAAYE,KAAK,SAAU,CACnDE,GAAI,OACJC,GAAI,OACJC,EAAG,OACF,MAAmB,EAAIN,EAAYE,KAAK,OAAQ,CACjDC,EAAG,kBACF,MAAO,W,sBCfNP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,gGACD,O,yICVG,SAASI,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,EAC8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,S,eCD3E,MAAMC,EAAY,CAAC,YAAa,aAkB1BC,GAAqB/R,EAAAA,EAAAA,IAAO,MAAO,CACvC0C,KAAM,oBACNiP,KAAM,OACNK,kBAAmBA,CAACzQ,EAAO0Q,IAAWA,EAAOC,MAHpBlS,CAIxB,CACDwP,MAAO,OACP2C,UAAW,SAkDb,EAhDoC7Q,EAAAA,YAAiB,SAAwB8Q,EAAS5Q,GACpF,MAAMD,GAAQ8Q,EAAAA,EAAAA,GAAgB,CAC5B9Q,MAAO6Q,EACP1P,KAAM,uBAEF,UACF2N,EAAS,UACT5D,EAAY,OACVlL,EACJ+Q,GAAQC,EAAAA,EAAAA,GAA8BhR,EAAOuQ,GACzCU,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGlR,EAAO,CACrCkL,cAEIiG,EA9BkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZT,KAAM,CAAC,SAEoBR,EAA+BgB,EAAQ,EAuBpDE,CAAkBJ,GAClC,OAAoB/Q,EAAAA,EAAAA,KAAKsQ,GAAoBU,EAAAA,EAAAA,GAAS,CACpDjR,IAAKA,EACLqR,GAAIpG,EACJ4D,WAAWyC,EAAAA,EAAAA,GAAKJ,EAAQR,KAAM7B,GAC9BmC,WAAYA,GACXF,GACL,G","sources":["views/base/businessman/Businessman.js","../node_modules/@mui/icons-material/AddCircle.js","../node_modules/@mui/icons-material/Category.js","../node_modules/@mui/icons-material/Info.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Table, Typography, Grid, Paper, TextField, IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Snackbar, Alert, Menu, MenuItem, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport { tableCellClasses } from '@mui/material/TableCell';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { FormControl, InputLabel, Select, OutlinedInput, Chip } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst Accordion = () => {\r\n  const [data, setData] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [editDeleteOpen, setDeleteDialogOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phonenumber: '',\r\n    alterphonenumber: '',\r\n    gstnumber: '',\r\n    aadharnumber: '',\r\n    pannumber: '',\r\n    membership: '',\r\n    addressLine1: '',\r\n    addressLine2: '',\r\n    city: '',\r\n    pincode: '',\r\n    state: '',\r\n   \r\n  });\r\n  const [cname,setCName]=useState('')\r\n  const [cemail,setCEmail]=useState('')\r\n  const [cphonenumber,setCPhonenumber]=useState('')\r\n  const [calterphonenumber,setCAlternumber]=useState('')\r\n  const [cselectedPlan,setCSelectedplan]=useState('')\r\n  const [cpannumber,setCPannumber]=useState('')\r\n  const [caddressLine1,setCAddressLine1]=useState('')\r\n  const [caddressLine2,setCAddressLine2]=useState('')\r\n  const [ccity,setCCity]=useState('')\r\n  const [cpincode,setCPincode]=useState('')\r\n  const [cstate,setCState]=useState('')\r\n  const [caadhar,setCAadharnumber]=useState('')\r\n  const [cgstNumber,setCGstnumber]=useState('')\r\n  const [type,setType] = useState('')\r\n  const [etype,setEType] = useState('')\r\n  const [open,setOpen] = useState('');\r\n  const[color,setColor] = useState('');\r\n  const[password,setPasssword]=useState('')\r\n  const [plan,getPlan]= useState('')\r\n\r\nconsole.log(etype,\"etype\")\r\n\r\nconst [tittle, setTittle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const[userid,setUserid] = useState('');\r\n  const[fcmtoken,setFcmtoken] = useState('')\r\n  const [messageopen, setMessageOPen] = useState(false);\r\n\r\n\r\n\r\n  const [msgOpen, setMsgOpen] = useState(false);\r\n  const [msg, setMsg] = useState('');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuOpenUserId, setMenuOpenUserId] = useState(null);\r\n\r\n  const navigate = useNavigate('')\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    \r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      // If token is expired, remove the token and navigate to homepage\r\n      if (decodedToken.exp < currentTime) {\r\n        Cookies.remove('token');\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      Cookies.remove('token');\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    getMembership();\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch('/api/userdetails');\r\n      const result = await response.json();\r\n      setData(result.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserById = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/useradmin?id=${userId}`);\r\n      const result = await response.json();\r\n      setUser(result.data);\r\n      \r\n      // Set form data and 'isapprove' switch state\r\n      setFormData({\r\n        name: result.data.username || '',\r\n        email: result.data.email || '',\r\n        phonenumber: result.data.phonenumber || '',\r\n        alterphonenumber: result.data.alterphonenumber || '',\r\n        gstnumber: result.data.gstnumber || '',\r\n        aadharnumber: result.data.aadharnumber || '',\r\n        pannumber: result.data.pannumber || '',\r\n        addressLine1: result.data.addressline1 || '',\r\n        addressLine2: result.data.addressline2 || '',\r\n        city: result.data.city || '',\r\n        pincode: result.data.pincode || '',\r\n        state: result.data.state || '',\r\n      });\r\n  \r\n      // Set the 'isapprove' checkbox state from fetched data\r\n      setChecked(result.data.isapprove || false);\r\n      setEType(result.data.membership,)\r\n      setFcmtoken(result.data.fcmToken)\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching user by ID:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const updateUser = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/user_update?id=${userId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          isapprove: checked,\r\n          membership: etype\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      console.log(result,\"wear\")\r\n      setMsg(result.message || 'Update successful');\r\n      setMsgOpen(true);\r\n      setColor('success')\r\n      setEditDialogOpen(false);\r\n      handleMenuClose()\r\n      fetchUserData(); // Refresh the user data after the update\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      setMsg('Error updating user');\r\n      setMsgOpen(true);\r\n    }\r\n  };\r\n  \r\n\r\n  const userDelete = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/userdelete?id=${userId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      const result = await response.json();\r\n      setMsg(result.message || 'Delete successful');\r\n      setMsgOpen(true);\r\n      setColor('success')\r\n      setDeleteDialogOpen(false);\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n      setMsg('Error deleting user');\r\n      setColor('error')\r\n      setMsgOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleBusiness = async () => {\r\n    try{\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      // const uploaddocs = await uploadDocs();\r\n\r\n     \r\n      \r\n      const raw = JSON.stringify({\r\n        \"username\": cname,\r\n  \"email\": cemail,\r\n  \"phonenumber\": cphonenumber,\r\n  \"password\": password,\r\n  \"role\": \"businessman\",\r\n  \"alterphonenumber\": calterphonenumber,\r\n  \"membership\": type,\r\n  \"pannumber\": cpannumber,\r\n  \"addressline1\": caddressLine1,\r\n  \"addressline2\":caddressLine2,\r\n  \"isapprove\":approve,\r\n  // \"landmark\": clandmark,\r\n  \"city\": ccity,\r\n  \"pincode\": cpincode,\r\n  \"state\": cstate,\r\n  \"aadharnumber\": caadhar,\r\n  \"gstnumber\": cgstNumber,\r\n  // \"upload\": uploaddocs\r\n      });\r\n      \r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\"\r\n      };\r\n      \r\n      fetch(\"/api/register\", requestOptions)\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n            return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n            return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n    })\r\n    .then((result) => {\r\n        if (result.status_code === 200) {\r\n            console.log(result.data.token);\r\n\r\n            // const token = result.data.token;\r\n            // Cookies.set('token', token, { expires: 7, secure: true });\r\n\r\n            fetchUserData()\r\n            setMsgOpen(true);\r\n            setColor('success');\r\n            setMsg(result.data.msg || \"Register Success\");\r\n            // setTimeout(() => {\r\n            //   navigate('/');\r\n            // }, \"1000\");\r\n           \r\n            \r\n\r\n        } else if (result.status_code === 400) {\r\n          setMsgOpen(true);\r\n            setColor('error');\r\n            setMsg(result.data.msg);\r\n\r\n        } else if (result.status_code === 401) {\r\n          setMsgOpen(true);\r\n            setColor('error');\r\n            setMsg(\"Unauthorized access\");\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n        setMsgOpen(true);\r\n        setColor('error');\r\n        setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    });\r\n    }catch(error){\r\n      console.error(error);\r\n      setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    }\r\n   }\r\n\r\n   console.log(plan,\"plan data\")\r\n\r\n   const getMembership =()=>{\r\n    try{\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        redirect: \"follow\"\r\n      };\r\n      \r\n      fetch(\"/api/plandetail\", requestOptions)\r\n      .then(async (response) => {\r\n        if (response.status === 200 || response.status === 400) {\r\n            return { status_code: response.status, data: await response.json() };\r\n        } else {\r\n            return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n        }\r\n    })\r\n    .then((result) => {\r\n      getPlan(result.data.data)\r\n            console.log(result.data.data,\"plan comming\")                  \r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n        setMsgOpen(true);\r\n        setColor('error');\r\n        setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    });\r\n    }catch(error){\r\n      console.error(error);\r\n      setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(error.response?.data?.message || 'An Error Occurred');\r\n    }\r\n   }\r\n\r\n   const  SendMessage =()=>{\r\n    try{\r\n      const myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nconst raw = JSON.stringify({\r\n  \"token\":fcmtoken,\r\n  \"title\": tittle,\r\n  \"body\": description,\r\n  \"userId\": userid\r\n});\r\n\r\nconst requestOptions = {\r\n  method: \"POST\",\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: \"follow\"\r\n};\r\n\r\nfetch(\"/api/notifications/send\", requestOptions)\r\n.then(async (response) => {\r\n  if (response.status === 200 || response.status === 400) {\r\n      return { status_code: response.status, data: await response.json() };\r\n  } else {\r\n      return { status_code: response.status, data: { msg: 'Unexpected Error' } };\r\n  }\r\n})\r\n.then((result) => {\r\n  if (result.status_code === 200) {\r\n      console.log(result.data, \"Token stored\")\r\n\r\n      setMsgOpen(true);\r\n      setColor('success');\r\n      \r\n      setMsg(\"Message Sended\");\r\n      \r\n  } else if (result.status_code === 400) {\r\n    setMsgOpen(true);\r\n      setColor('error');\r\n      setMsg(\"Permisson not granted\");\r\n  } \r\n})\r\n.catch((error) => {\r\n  console.error(error);\r\n  setMsgOpen(true);\r\n  setColor('error');\r\n  setMsg(error.response?.data?.message );\r\n});\r\n\r\n    }catch(error){\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n   const[create,setCreate]=useState('')\r\n\r\n   const handleCreateOpen = () => {\r\n    setCreate(true);\r\n    \r\n  };\r\n\r\n  const handleCreateClose = () => {\r\n    setCreate(false);\r\n  };\r\n\r\n  const [checked, setChecked] = React.useState('');\r\n  const [approve, setApprove] = React.useState('');\r\n  console.log(checked,\"approve\")\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    setApprove(event.target.checked)\r\n  };\r\n\r\n\r\n  const handleMenuOpen = (event, userId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setMenuOpenUserId(userId);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setMenuOpenUserId(null);\r\n  };\r\n\r\n  const handleEditClick = (userId) => {\r\n    setEditDialogOpen(true);\r\n    fetchUserById(userId);\r\n  };\r\n\r\n  const handleDeleteOpen = (userId) => {\r\n    setDeleteDialogOpen(true);\r\n    fetchUserById(userId);\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  const handleMessageOpen = (userId) => {\r\n    setMessageOPen(true); // Ensure this state controls the delete modal/dialog\r\n    fetchUserById(userId); // Get user data if needed for confirmation\r\n  };\r\n\r\n  const handleMessageClose = () => {\r\n    setMessageOPen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (user) {\r\n      userDelete(user._id);\r\n      handleDeleteClose()\r\n    }\r\n  };\r\n\r\n  const handleMessage = () => {\r\n    SendMessage()\r\n    handleMessageClose()\r\n    handleMenuClose()\r\n  };\r\n\r\n  const handleRegister=()=>{\r\n    handleBusiness()\r\n    handleCreateClose()\r\n\r\n  }\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleMembership = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEType(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n    setType(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <Box mb={5} sx={{ flexGrow: 1 }}>\r\n    <AppBar style={{backgroundColor:\"#2d2859\",color:\"#fff\"}}  position=\"static\">\r\n      <Toolbar  variant=\"dense\">\r\n        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={6} container direction=\"row\" alignItems=\"center\">\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 0.5 }}>\r\n              <CategoryIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n              Businessman List\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n            <Button onClick={handleCreateOpen} color=\"inherit\"> <AddCircleIcon sx={{ mr: 0.5 }}/> Add Businessman</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog open={create} onClose={handleCreateClose} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Create Businessman\"}</DialogTitle>\r\n                <DialogContent>\r\n                  <Grid mt={2} container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        value={cname}\r\n                        onChange={(e) => setCName(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        value={password}\r\n                        onChange={(e) => setPasssword(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        value={cemail}\r\n                        onChange={(e) => setCEmail(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                    <FormControl fullWidth margin=\"normal\" >\r\n        <InputLabel id=\"demo-multiple-chip-label\">Membership</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          value={type}\r\n          onChange={handleMembership}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Membership\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {Array.isArray(plan)&& plan.map((member) => (\r\n            <MenuItem\r\n              key={member._id}\r\n              value={member.planname}\r\n              style={getStyles( cname,type, theme)}\r\n            >\r\n              {member.planname}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n                    </Grid> */}\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Membership\"\r\n                        variant=\"outlined\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        variant=\"outlined\"\r\n                        value={cphonenumber}\r\n                        onChange={(e) => setCPhonenumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Alter Phone Number\"\r\n                        variant=\"outlined\"\r\n                        value={calterphonenumber}\r\n                        onChange={(e) => setCAlternumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Aadhar Number\"\r\n                        variant=\"outlined\"\r\n                        value={caadhar}\r\n                        onChange={(e) => setCAadharnumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"GST Number\"\r\n                        variant=\"outlined\"\r\n                        value={cgstNumber}\r\n                        onChange={(e) => setCGstnumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"PAN Number\"\r\n                        variant=\"outlined\"\r\n                        value={cpannumber}\r\n                        onChange={(e) => setCPannumber(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address Line 1\"\r\n                        variant=\"outlined\"\r\n                        value={caddressLine1}\r\n                        onChange={(e) => setCAddressLine1(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address Line 2\"\r\n                        variant=\"outlined\"\r\n                        value={caddressLine2}\r\n                        onChange={(e) => setCAddressLine2(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"City\"\r\n                        variant=\"outlined\"\r\n                        value={ccity}\r\n                        onChange={(e) => setCCity(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Pincode\"\r\n                        variant=\"outlined\"\r\n                        value={cpincode}\r\n                        onChange={(e) => setCPincode(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"State\"\r\n                        variant=\"outlined\"\r\n                        value={cstate}\r\n                        onChange={(e) => setCState(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid mt={1} item xs={12}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={approve}\r\n              onChange={handleChange}\r\n              inputProps={{ 'aria-label': 'Approve status' }}\r\n            />\r\n          }\r\n          label=\"Approve User\"\r\n        />\r\n      </Grid>\r\n                  <Grid mt={2} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" sx={{padding:2}}  >\r\n                  <Button variant='contained' sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}  onClick={handleCreateClose}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button variant='contained' sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={()=>{\r\n                  if(!cname){\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg( \"Name Required\");\r\n                    return; \r\n                  }\r\n                  if(!password){\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg( \"Password Required\");\r\n                    return; \r\n                  }if (password.length !== 8) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Password must be 8 Digit');\r\n                    return;\r\n                  }\r\n                  if(!cemail){\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg( \"Email Required\");\r\n                    return; \r\n                  }\r\n                  if (!cphonenumber) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Phone Number required');\r\n                    return;\r\n                  }\r\n                  if (cphonenumber.length !== 10) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Phone Number must be 10 digits');\r\n                    return;\r\n                  }\r\n                  if (!calterphonenumber) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Alternate Phone Number required');\r\n                    return;\r\n                  }\r\n                  if (calterphonenumber.length !== 10) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Alternate Phone Number must be 10 digits');\r\n                    return;\r\n                  }\r\n                  if (!cgstNumber) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('GST Number required');\r\n                    return;\r\n                  }\r\n                  if (cgstNumber.length !== 12) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('GST Number must be 12 digits');\r\n                    return;\r\n                  }\r\n                  if (!cpannumber) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('PAN Number required');\r\n                    return;\r\n                  }\r\n                  if (cpannumber.length !== 10) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('PAN Number must be 10 digits');\r\n                    return;\r\n                  }\r\n                  if (!caddressLine1) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Address Line 1 required');\r\n                    return;\r\n                  }\r\n                  if (!caddressLine2) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Address Line 2 required');\r\n                    return;\r\n                  }\r\n                  if (!ccity) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('City required');\r\n                    return;\r\n                  }\r\n                  if (!cstate) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('State required');\r\n                    return;\r\n                  }\r\n                  if (!cpincode) {\r\n                    setMsgOpen(true);\r\n                    setColor('error');\r\n                    setMsg('Pincode required');\r\n                    return;\r\n                  }\r\n\r\n                    handleRegister()\r\n                  }}>Save</Button>\r\n                  </Grid>\r\n                </DialogContent>\r\n                \r\n              </Dialog>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n      <TableContainer sx={{marginBottom:\"20px\"}} component={Paper}>\r\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>User Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Phone Number</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Mail</StyledTableCell>\r\n              <StyledTableCell align=\"center\">City</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Membership</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Details</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Edit</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 ? (\r\n              data.map((item, index) => item.role === 'businessman' && (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell>{item.username}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{item.phonenumber}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{item.email}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{item.city}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{item.membership}</StyledTableCell>\r\n                 \r\n                  <StyledTableCell align=\"center\">\r\n                    <IconButton onClick={() => { setDialogOpen(true); fetchUserById(item._id); }}>\r\n                      <InfoIcon />\r\n                    </IconButton>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    <IconButton onClick={(e) => handleMenuOpen(e, item._id)}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                      anchorEl={anchorEl}\r\n                      open={Boolean(anchorEl) && menuOpenUserId === item._id}\r\n                      onClose={handleMenuClose}\r\n                    >\r\n                      <MenuItem onClick={() => handleEditClick(item._id)}>Edit</MenuItem>\r\n                      <MenuItem onClick={() => handleDeleteOpen(item._id)}>Delete</MenuItem>\r\n                      <MenuItem onClick={() => handleMessageOpen(item._id)}>Message</MenuItem>\r\n                    </Menu>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))\r\n            ) : (\r\n              <Typography>No data available</Typography>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)} TransitionComponent={Transition}>\r\n        <DialogTitle>User Details</DialogTitle>\r\n        <DialogContent sx={{ width: \"600px\" }}>\r\n          {user && (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography>Name: {user.username}</Typography>\r\n                <Typography>Phone: {user.phonenumber}</Typography>\r\n                <Typography>Email: {user.email}</Typography>\r\n                <Typography>Address: {user.addressline1}, {user.addressline2}</Typography>\r\n                <Typography>City: {user.city}</Typography>\r\n                <Typography>Pincode: {user.pincode}</Typography>\r\n                <Typography>Aadhar Number: {user.aadharnumber}</Typography>\r\n                <Typography>Pan Number: {user.pannumber}</Typography>\r\n                <Typography>Membership: {user.membership}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDialogOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n     \r\n      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} TransitionComponent={Transition}>\r\n  <DialogTitle>Manage User Profile</DialogTitle>\r\n  <DialogContent>\r\n    <Grid container>\r\n      {Object.keys(formData).map(key => (\r\n        <Grid item xs={12} key={key}>\r\n          <TextField\r\n            label={key.charAt(0).toUpperCase() + key.slice(1)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            name={key}\r\n            value={formData[key]}\r\n            onChange={(e) => setFormData({ ...formData, [e.target.name]: e.target.value })}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Grid item xs={12}>\r\n      <TextField\r\n            label=\"Membership\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            \r\n            value={type}\r\n            onChange={(e) => setEType( e.target.value )}\r\n          />\r\n                    </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={checked}\r\n              onChange={handleChange}\r\n              inputProps={{ 'aria-label': 'Approve status' }}\r\n            />\r\n          }\r\n          label=\"Approve User\"\r\n        />\r\n      </Grid>\r\n      <Grid mt={2} sx={{padding:1}} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n      <Button  sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}} onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n    <Button  sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={() => { updateUser(user._id); }}>Save</Button>\r\n      </Grid>\r\n    </Grid>\r\n  </DialogContent>\r\n</Dialog>\r\n\r\n      <Dialog open={editDeleteOpen} onClose={handleDeleteClose} TransitionComponent={Transition}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete this user?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n          <Button sx={{ backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}} onClick={handleDeleteClose}> Cancel</Button>\r\n          <Button sx={{ backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleDelete}>Delete</Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={messageopen}\r\n        onClose={handleMessageClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogContent sx={{width:\"400px\"}}>\r\n          \r\n            <Typography className='mb-4' sx={{fontSize:\"16px\",width:\"100%\"}}>Send Message</Typography>\r\n           <Grid xs={12} container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\r\n            <TextField\r\n            label='Tittle'\r\n            className='mb-4'\r\n            onChange={(e)=>setTittle(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n            label='Message'\r\n            className='mb-2'\r\n            onChange={(e)=>setDescription(e.target.value)}\r\n            />\r\n           </Grid>\r\n           <Grid mt={5} container direction=\"row\" justifyContent=\"space-between\"alignItems=\"center\" >\r\n          <Button variant='contained' sx={{ fontSize:\"10px\", backgroundColor: '#FC4343', color: '#fff','&:hover': {backgroundColor: '#FC4343' }}}  onClick={handleMessageClose}>\r\n           Cancel\r\n          </Button>\r\n          <Button variant='contained' sx={{ fontSize:\"10px\", backgroundColor: 'green', color: '#fff','&:hover': {backgroundColor: 'green' }}} onClick={handleMessage} s>\r\n            Send\r\n          </Button>\r\n          </Grid>\r\n          \r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n\r\n      <Snackbar open={msgOpen} autoHideDuration={2000} onClose={() => setMsgOpen(false)}>\r\n        <Alert onClose={() => setMsgOpen(false)} severity={color} sx={{ width: '100%' }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11h-4v4h-2v-4H7v-2h4V7h2v4h4z\"\n}), 'AddCircle');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;"],"names":["StyledTableCell","styled","TableCell","_ref","theme","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","border","Transition","React","props","ref","_jsx","Slide","direction","Accordion","data","setData","useState","user","setUser","dialogOpen","setDialogOpen","editDialogOpen","setEditDialogOpen","editDeleteOpen","setDeleteDialogOpen","formData","setFormData","name","email","phonenumber","alterphonenumber","gstnumber","aadharnumber","pannumber","membership","addressLine1","addressLine2","city","pincode","state","cname","setCName","cemail","setCEmail","cphonenumber","setCPhonenumber","calterphonenumber","setCAlternumber","cselectedPlan","setCSelectedplan","cpannumber","setCPannumber","caddressLine1","setCAddressLine1","caddressLine2","setCAddressLine2","ccity","setCCity","cpincode","setCPincode","cstate","setCState","caadhar","setCAadharnumber","cgstNumber","setCGstnumber","type","setType","etype","setEType","open","setOpen","setColor","password","setPasssword","plan","getPlan","console","log","tittle","setTittle","description","setDescription","userid","setUserid","fcmtoken","setFcmtoken","messageopen","setMessageOPen","msgOpen","setMsgOpen","msg","setMsg","anchorEl","setAnchorEl","menuOpenUserId","setMenuOpenUserId","navigate","useNavigate","useEffect","token","Cookies","get","decodedToken","jwtDecode","currentTime","Date","now","exp","remove","error","fetchUserData","getMembership","async","response","fetch","result","json","fetchUserById","userId","username","addressline1","addressline2","setChecked","isapprove","fcmToken","method","redirect","then","status","status_code","catch","_error$response3","_error$response3$data","message","_error$response4","_error$response4$data","create","setCreate","handleCreateClose","checked","approve","setApprove","handleChange","event","target","handleMenuClose","handleDeleteClose","handleMessageClose","handleRegister","myHeaders","Headers","append","raw","JSON","stringify","headers","_error$response","_error$response$data","_error$response2","_error$response2$data","handleBusiness","useTheme","_jsxs","_Fragment","children","Box","mb","sx","flexGrow","AppBar","style","position","Toolbar","variant","Grid","container","justifyContent","alignItems","item","xs","IconButton","edge","mr","CategoryIcon","Typography","component","Button","onClick","handleCreateOpen","AddCircleIcon","Dialog","onClose","DialogTitle","id","DialogContent","mt","spacing","TextField","fullWidth","label","value","onChange","e","FormControlLabel","control","Switch","inputProps","padding","length","TableContainer","marginBottom","Paper","Table","minWidth","TableHead","align","TableBody","map","index","role","_id","InfoIcon","handleMenuOpen","currentTarget","EditIcon","Menu","Boolean","MenuItem","handleEditClick","handleDeleteOpen","handleMessageOpen","TransitionComponent","width","DialogActions","Object","keys","key","charAt","toUpperCase","slice","margin","updateUser","DialogContentText","handleDelete","userDelete","className","handleMessage","SendMessage","_error$response5","_error$response5$data","s","Snackbar","autoHideDuration","Alert","severity","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","cx","cy","r","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","overridesResolver","styles","root","overflowX","inProps","useDefaultProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}